{"version":3,"sources":["images/portrairWelcomeImage.jpg","images/walpaperView1.jpg","images/Portrait3.jpg","images/AvengersBg.jpg","images/portraitBg.jpg","logo.svg","images/heroAppContainer.jpg","styles/syles.js","components/WelcomeBody.js","components/MainNavbar.jsx","components/ShowWindowDimension.jsx","components/DialogStatistics.jsx","components/WelcomeWindow.jsx","views/WelcomePage.jsx","services/api.js","components/GameScreen.jsx","views/GameView.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","img","DivCard","div","Item","h2","SubItem","h4","Title","h1","NavTitle","StatisticNumber","h3","Menu","StatisticTitle","props","fontSize","styleImg","width","maxHeight","objectFit","borderRadius","styleButton","padding","fontFamily","marginTop","color","textAling","linkColor","underline","listStyle","Component","MainNavbar","useState","collapsed","setCollapsed","Navbar","style","backgroundColor","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","React","useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","ref","Slide","direction","DialogStatistics","setOpen","Dialog","fullWidth","maxWidth","open","onClose","TransitionComponent","ListItem","won","List","errors","sucessess","points","button","autoplay","loop","src","type","WelcomeWindow","updateDimensions","setState","window","innerWidth","height","innerHeight","state","addEventListener","this","removeEventListener","Row","AvengersPortrait","AvengersBg","Col","xl","offset","size","xs","Button","to","target","WelcomePage","api","Axios","create","baseURL","Meta","Card","Snack","message","icon","GameScreen","numAleatorio","range","Math","floor","random","verifyName","e","numCards","pickedHeroe","name","value","CheckIcon","sucessesses","ErrorIcon","heroLoaded","loadingSnackBar","openStatistics","win","selectHeroes","numSorteado","heroeList","length","heroiSorteado","splice","errorsPercentage","sucessessesPercentage","snackBarColor","snackBarMessage","snackbarIcon","snackBarOpen","VisitedHeroes","ActualHeroes","maxHeroes","choices","elevation","variant","snack","setTimeout","bind","get","then","res","data","catch","error","alert","prevState","pickedHero","i","push","errosPercentage","Grid","container","justify","item","hoverable","cover","alt","images","sm","description","alignItems","map","heroSelected","fluid","outline","Spinner","Snackbar","place","closeNotification","close","severity","GameView","App","exact","path","from","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.c5e17bcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrairWelcomeImage.39bad02f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/walpaperView1.c6704abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Portrait3.064f2d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AvengersBg.ec13f750.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portraitBg.e1032b74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/heroAppContainer.589d178f.jpg\";","import portraitImage from '../images/portrairWelcomeImage.jpg'\nimport styled from 'styled-components'\nimport '../fonts/fonts.css'\nexport const MainImage = styled.img`\n\n        src : \"../\" ;\n      @media(orientation : portrait) {\n         src : '../images/portrairWelcomeImage.jpg';\n         width : 100% ;\n         height : auto ;\n         max-height : '95%' ;\n         max-width : '90%'\n      }\n\n      @media(orientation : landscape){\n          src :   '../images/heroAp0B0930pContainer.jpg';\n      }\n\n`\nexport const DivCard = styled.div `\n    display : flex;\n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n\n`\nexport const Item = styled.h2`\n    margin-top : 9%;\n    font-family : \"avengersFont\";\n    font-size : 5vh ;\n`\nexport const SubItem = styled.h4`\n    /* era 5%*/\n    font-size : 4vh;\n    font-family : \"avengersFont\";\n    /*color : #0B0930;*/\n`\nexport const Title = styled.h1`\n    text-align : center;\n    margin : 5%;\n    /* era 5%*/\n    font-size : 5rem ;\n    font-family : \"avengersFont\";\n    /*color : #0B0930;*/\n    /*color :  #2C2A89 ;*/\n    color : whitesmoke;\n`\nexport const NavTitle = styled.h2`\n    margin-top : 15% ;\n    text-align : center;\n    font-size : 3rem ;\n    font-family : \"avengersFont\";\n   /* color : #0B0930;*/\n   color :  #ffffff;\n`\nexport const ButtonTitle = styled.h3`\n    font-family : 'avengersFont';\n    color : #5C49C6;\n\n`\nexport const StatisticNumber = styled.h4 `\n    display : inline-block;\n\n    font-family : -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size : '3rem'\n\n`\nexport const Menu = styled.div`\n    margin-top : 10%;\n    margin-left : 25%;\n    width : 50%;\n    display : flex;\n\tflex-flow: column nowrap;\n    padding-left : 5%;\n    padding-right : 5%;\n    background-color : none;\n    height : 80%;\n`\nexport const StatisticTitle  = styled.h2 `\n    font-family : \"avengersFont\" ;\n    font-size  : ${props => `${props.fontSize}vh`} ;\n    color  : rgb(24, 0, 64);\n     \n\n`","import React, { Component } from 'react'\nimport { Row, Col, Container, Media } from 'reactstrap'\n//images\nimport ContainerImage from '../images/heroAppContainer.jpg'\nimport PortraitImage from '../images/portrairWelcomeImage.jpg'\nimport PortraitImage2 from '../images/walpaperView1.jpg'\nimport PortraitImage3 from '../images/Portrait3.jpg'\n\nimport { withConfigConsumer } from 'antd/lib/config-provider/context'\nimport { MainImage } from '../styles/syles'\nimport { Grid } from '@material-ui/core'\n\n//StyledComponents\nimport { Title, Menu, ButtonTitle } from '../styles/syles'\n\n//Button\nimport { Button } from 'reactstrap';\n\n//Router\nimport {\n    Link,\n    BrowserRouter as Router,\n\n} from 'react-router-dom'\nconst styleImg = {\n\n    width: '100%',\n    maxHeight: \"100vh\",\n    objectFit: 'cover',\n    borderRadius: '0px  0px 10px 10px'\n\n}\n\nconst styleButton = {\n    padding: '3%',\n    fontFamily: 'avengersFont',\n    marginTop: \"3%\",\n    fontSize: '4vh',\n    color: '#1A1A64',\n    //backgroundColor : '#1A1A64',\n    textAling: 'center',\n    borderRadius: '25px'\n}\n\nconst linkColor = {\n\n    underline: 'none',\n    listStyle: 'none',\n    color: \"#1A1A64\"\n}\n\nclass WelcomeBody extends Component {\n\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n    componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n    }\n    render() {\n        return (\n            <div style={{ backgroundColor: 'whitesmoke' }}\n            >\n                <Row className=\"no-gutters\">\n\n                    {this.state.width > this.state.height ? (\n                        <Col xl={4} xs={0}>\n                            <img style={styleImg} className=\"img-fluid\" src={PortraitImage3}/*src ={this.state.height> this.state.width ? PortraitImage : ContainerImage }*/></img>\n                        </Col>\n                    ) : ''\n                    }\n                    <Col xl={{ size: 4 }} xs={{ size: 12 }}>\n                        <Title>\n                            Hero App\n                        </Title>\n                        <Menu>\n\n\n                            <Button style={styleButton} outline color=\"primary\" > <Link to=\"/game\" style={linkColor}> Iniciar o Jogo</Link></Button>\n                            <br />\n\n                            <Button style={styleButton} outline color=\"primary\">Sobre</Button>\n                            <br />\n\n                            <Button style={styleButton} outline color=\"primary\"><a style={linkColor} href=\"http://github.com/mwerneck1956\" target=\"_blank\">GitHub </a></Button>\n\n                        </Menu>\n                    </Col>\n                    {this.state.width > this.state.height ? (\n                        <Col xl={4} xs={{ offset: 12 }}>    \n\n                            <img style={styleImg} className=\"img-fluid\" src={PortraitImage2} ></img>\n                        </Col>\n                    ) : ''}\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default WelcomeBody","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport {NavTitle } from '../styles/syles'\nconst MainNavbar = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar style={{backgroundColor :\"#180040\" }} light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\"> <NavTitle>Hero App </NavTitle> </NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Components</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default MainNavbar;","import React from 'react';\n\nexport default class ShowWindowDimensions extends React.Component {\n  state = { width: 0, height: 0 };\n  render() {\n    return <span>Window size: {this.state.width} x {this.state.height}</span>;\n  }\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n}\n","import React from 'react';\n\n//Material Ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@material-ui/core/Box';\n\n\n//Styled components\nimport { Title, SubTitle, StatisticTitle ,StatisticNumber} from '../styles/syles'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DialogStatistics(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n\n            <Dialog fullWidth maxWidth=\"md\" open={props.open} onClose={handleClose} TransitionComponent={Transition}>\n\n                <ListItem>\n                    <div className=\"col-12 d-flex  justify-content-center mt-3\">\n                        <StatisticTitle fontSize={5}>\n                            {props.won ? \"Congratulation! You Won\" : \"You Lose !\"}\n\n                        </StatisticTitle>\n                    </div>\n                </ListItem>\n                <List>\n                    <div className=\"col-12 d-flex justify-content-start ml-3\">\n                        <StatisticTitle fontSize={4}>\n                            Statistics\n                           </StatisticTitle>\n                    </div>\n                    <div className=\"col-12 d-flex justify-content-start ml-5\">\n                        <StatisticTitle fontSize={3}>\n                            Errors : <StatisticNumber>{props.errors}</StatisticNumber>\n                        </StatisticTitle>\n                    </div>\n                    <div className=\"col-12 d-flex justify-content-start ml-5\">\n                        <StatisticTitle fontSize={3}>\n                            Successes :<StatisticNumber>{props.sucessess}</StatisticNumber>\n                        </StatisticTitle>\n                    </div>\n                    <div className=\"col-12 d-flex justify-content-start ml-5\">\n                        <StatisticTitle fontSize={2.8}>\n                            Points :  <StatisticNumber>{props.points}</StatisticNumber>\n                        </StatisticTitle>\n                    </div>\n                </List>\n                <ListItem button>\n                    <div className= \"col-12 d-flex justify-content-center \">\n                        <video autoplay=\"true\" loop =\"true\"  style={{ width: \"100%\" , maxHeight : \"40\" }} src={props.won ? \"https://media.giphy.com/media/8vnih78ZeNTu3BOCrn/giphy.mp4\" :\"https://thumbs.gfycat.com/SnarlingBeautifulDoe-mobile.mp4\" } type=\"video/mp4\" className=\"img-fluid\" />\n                    </div>\n                </ListItem>\n                <ListItem button>\n                </ListItem>\n\n\n            </Dialog>\n        </div>\n    );\n}","import React, { Component } from 'react'\n\n\n//Reacstrap\nimport { Container, Col, Row, Button } from 'reactstrap'\n\n//Styled-Components\nimport { Title, ButtonTitle, Menu } from '../styles/syles'\n\n\n\nimport {\n    Link,\n    BrowserRouter as Router,\n\n} from 'react-router-dom'\n\n//Images\n\nimport AvengersBg from '../images/AvengersBg.jpg'\nimport AvengersPortrait from '../images/portraitBg.jpg'\nconst linkColor = {\n\n    underline: 'none',\n    listStyle: 'none',\n    color : \"whitesmoke\"\n    //color: \"#1A1A64\"\n}\nconst styleButton = {\n    padding: '3%',\n    fontFamily: 'avengersFont',\n    marginTop: \"3%\",\n    fontSize: '4vh',\n    color: 'white',\n    textAling: 'center',\n   backgroundColor : 'rgb(24, 0, 64)',\n    //borderRadius: '25px'\n}\nexport default class WelcomeWindow extends Component {\n \n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n    componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n    }\n    render() {\n        return (\n            <div\n\n            >\n                <Row className=\"no-gutters\">\n                    <img style={{ position: \"fixed\", width: \"100%\", objectFit: 'cover' }} src={this.state.height > this.state.width ? AvengersPortrait :AvengersBg }  className=\"img-fluid\" />\n                    <Col xl={{ offset: 7, size: 5 } } xs ={{size : 12}}>\n                        <Menu>\n                            <Title>\n                                Hero <br />\n                                App\n                        </Title>\n\n                            <Button style={styleButton}    color=\"dark\" > <Link to=\"/game\" style={linkColor}> Iniciar o Jogo</Link></Button>\n                            <br />\n\n                            <Button style={styleButton}  color=\"dark\"><Link style={linkColor} to = \"/aboutUs\">Sobre</Link></Button>\n                            <br />\n\n                            <Button style={styleButton}   color=\"dark\"><a style={linkColor} href=\"http://github.com/mwerneck1956\" target=\"_blank\">GitHub </a></Button>\n\n                        </Menu>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport WelcomeBody from '../components/WelcomeBody'\nimport WelcomeWindow from '../components/WelcomeWindow'\nclass WelcomePage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div style={{backgroundColor : \"whitesmoke\" , height : '100vh' ,}}>\n            {/*<WelcomeBody /> */}\n             <WelcomeWindow/>\n            </div>\n                )\n            }\n        }\n        \nexport default WelcomePage","import Axios from \"axios\";\n\n\nconst api = Axios.create({\n  baseURL: \"https://\" +  \"cdn.rawgit.com/akabab/superhero-api/0.2.0/api\"\n // headers: { \"X-Requested-With\": \"XMLHttpRequest\" }\n});\n\nexport default api;","import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Components\nimport DialogStatistics from './DialogStatistics'\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem, DivCard } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\nimport { Snackbar } from '@material-ui/core';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n//Material Ui Icons\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 4;\n\nconst Snack = {\n    message: '',\n    color: '',\n    icon: null\n}\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            win : false ,\n            errorsPercentage : null ,\n            sucessessesPercentage : null ,\n            openStatistics : false,\n            snackBarColor: '',\n            snackBarMessage: '',\n            snackbarIcon: null,\n            snackBarOpen: false,\n            numCards: 0, //Contar quantos numeros de cards ja foram exibidos\n            heroLoaded: false, //Controlar se o heroi esta carregado ou não \n            heroeList: null, //Lista contendo todos os herois recebidos da api\n            VisitedHeroes: [], //Vetor com os herois ja visitados para evitir duplicatas\n            ActualHeroes: [], //\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    loadingSnackBar(snack) { //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n        this.setState({\n            snackBarColor: snack.color,\n            snackBarMessage: snack.message,\n            snackbarIcon: snack.icon,\n            snackBarOpen: true\n        });\n        setTimeout(\n            function () {\n                this.setState({ snackBarOpen: false });\n            }.bind(this),\n            1500\n        );\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n\n        }\n    }\n\n    verifyName = (e) => {\n\n        //Se o botão foi clickado Adiciono 1 a meus cards visitado\n        this.state.numCards = this.state.numCards + 1\n        if (this.state.numCards !== numCards) {\n            if (this.state.pickedHeroe.name === e.target.value) {\n                Snack.message = \"Você Acertou!\"\n                Snack.color = \"success\"\n                Snack.icon = CheckIcon\n\n                this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n            } else {\n                Snack.message = \"Você errou!\"\n                Snack.color = \"warning\"\n                Snack.icon = ErrorIcon\n\n                this.setState({ errors: this.state.errors + 1 })\n\n            }\n            this.setState({ heroLoaded: false, pickedHeroe: null })\n            this.loadingSnackBar(Snack)\n        }else{\n            if(this.state.sucessesses > this.state.errors){\n                this.setState({openStatistics : true , win : true}  )\n            }else{\n                this.setState({openStatistics : true , win : false}  )\n            }\n        \n        }\n    }\n    selectHeroes = () => {\n\n        let numSorteado = this.numAleatorio(this.state.heroeList.length)\n        let heroiSorteado = this.state.heroeList[numSorteado] //Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n        this.state.heroeList.splice(numSorteado, 1) //Deletei o heroi do meu vetor de herois\n\n        return heroiSorteado\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n\n            let pickedHero = this.selectHeroes() // Pego o heroi escolhido atraves da funcão auxiliar\n\n            this.setState({ pickedHeroe: pickedHero, heroLoaded: true })\n\n\n\n            let random = this.numAleatorio(3) //Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\n            for (var i = 0; i < 3; i++) {\n                if (i === random) {\n                    this.state.ActualHeroes.push(pickedHero)\n                } else {\n                    this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)])\n                }\n            }\n        }\n        return (\n           \n            <div style={{ backgroundColor: 'whitesmoke', height: \"100%\" }}>\n                 <DialogStatistics \n                    open= {this.state.openStatistics} \n                    won = {this.state.win} \n                    errors ={this.state.errosPercentage} \n                    sucessess = {this.state.sucessessesPercentage}  points={this.state.points} />\n                <Grid\n\n                    container\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4}\n                        xs=\"auto\"\n\n                    >\n                        <div className=\"offset-xl-2\">\n                            <Item> Pontuacao : {this.state.points} </Item>\n\n                            <SubItem>\n\n                                Acertos : {this.state.sucessesses}\n                                <br />\n                                Errors : {this.state.errors}\n\n                            </SubItem>\n                        </div>\n\n                    </Grid>\n                    <Grid item\n                        className=\"mt-3 mb-2\"\n                        xl={4}\n                        xs={8}\n                    >\n                        <DivCard>\n                            {this.state.pickedHeroe ? <Card\n                                hoverable\n                                style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                                cover={<img alt=\"example\" style={{ width: '350px', borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.sm} />}\n                            >\n\n                                <Meta title=\"\" description=\"\" />\n                                <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                    {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                        <Grid\n                                            fluid\n                                        >\n                                            <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                            <br />\n                                        </Grid>\n\n                                    )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                                </Grid>\n\n                            </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                            }\n                        </DivCard>\n\n                    </Grid>\n                    <Grid\n                        className=\"mt-5\"\n                        item xl={4}\n                    >\n                        <div className=\"offset-xl-5\">\n                            <SubItem>\n                                Tempo Restante :\n                            </SubItem>\n                            <SubItem>\n                                Cards Restantes : {numCards - this.state.numCards}\n                            </SubItem>\n                        </div>\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    place=\"bc\"\n                    open={this.state.snackBarOpen}\n                    closeNotification={() => this.setState({ snackBarOpen: false })}\n                    close\n                >\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.snackBarColor}>\n                        {this.state.snackBarMessage}\n                    </MuiAlert>\n\n                </Snackbar>\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen","import React, { Component } from 'react'\nimport GameScreen from '../components/GameScreen'\nimport MainNavbar from '../components/MainNavbar'\nclass GameView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MainNavbar/>\n                <GameScreen/>\n            </div>\n        )\n    }\n}\n\nexport default GameView","import React from 'react';\nimport logo from './logo.svg';\nimport WelcomeBody from '../src/components/WelcomeBody'\nimport MainNavbar from './components/MainNavbar'\nimport ShowWindowDimension from './components/ShowWindowDimension'\nimport DialogStatistics from './components/DialogStatistics'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom'\n//Views\nimport WelcomePage from './views/WelcomePage'\nimport GameView from './views/GameView'\nfunction App() {\n  return (\n    <div className=\"App\" style={{backgroundColor : \"whitesmoke\"}}>\n      {  <Router>\n      \n        <Switch>\n          <Route exact path=\"/home\">\n            <WelcomePage />\n          </Route>\n          <Route path=\"/game\">\n            <GameView/>\n          </Route>\n          <Redirect from='/' to='/home' /> \n        </Switch>\n      \n      </Router> }\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}