{"version":3,"sources":["images/walpaperView1.jpg","images/Portrait3.jpg","images/AvengersBg.jpg","images/portraitBg.jpg","logo.svg","images/heroAppContainer.jpg","styles/syles.js","components/WelcomeBody.js","components/MainNavbar.jsx","components/ShowWindowDimension.jsx","components/WelcomeWindow.jsx","views/WelcomePage.jsx","services/api.js","components/GameScreen.jsx","views/GameView.jsx","App.js","serviceWorker.js","index.js","images/portrairWelcomeImage.jpg"],"names":["module","exports","styled","img","Item","h2","SubItem","h4","Title","h1","NavTitle","Menu","h3","div","styleImg","width","maxHeight","objectFit","borderRadius","styleButton","padding","fontFamily","marginTop","fontSize","color","textAling","linkColor","underline","listStyle","Component","MainNavbar","props","useState","collapsed","setCollapsed","Navbar","style","backgroundColor","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","React","WelcomeWindow","updateDimensions","setState","window","innerWidth","height","innerHeight","state","addEventListener","this","removeEventListener","Row","position","src","AvengersPortrait","AvengersBg","Col","xl","offset","size","xs","Button","outline","to","target","WelcomePage","api","Axios","create","baseURL","Meta","Card","GameScreen","numAleatorio","range","Math","floor","random","verifyName","e","pickedHeroe","name","value","alert","points","sucessesses","errors","heroLoaded","selectHeroes","vetHerois","numSorteado","i","heroeList","push","VisitedHeroes","ActualHeroes","maxHeroes","choices","get","then","res","data","catch","error","prevState","map","heroSelected","hero","concat","indiceEscolhido","length","splice","console","log","Grid","container","spacing","justify","item","hoverable","cover","alt","images","md","title","description","direction","alignItems","fluid","Spinner","marginLeft","GameView","App","exact","path","from","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7c74a25d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/walpaperView1.c6704abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Portrait3.064f2d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AvengersBg.ec13f750.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portraitBg.e1032b74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/heroAppContainer.589d178f.jpg\";","import portraitImage from '../images/portrairWelcomeImage.jpg'\nimport styled from 'styled-components'\nimport '../fonts/fonts.css'\nexport const MainImage = styled.img`\n\n        src : \"../\" ;\n      @media(orientation : portrait) {\n         src : '../images/portrairWelcomeImage.jpg';\n         width : 100% ;\n         height : auto ;\n         max-height : '95%' ;\n         max-width : '90%'\n      }\n\n      @media(orientation : landscape){\n          src :   '../images/heroAp0B0930pContainer.jpg';\n      }\n\n`\n\nexport const Item = styled.h2`\n    margin-top : 9%;\n    font-family : \"avengersFont\";\n    font-size : 5vh ;\n`\nexport const SubItem = styled.h4`\n   text-align : center;\n    /* era 5%*/\n    font-size : 4vh;\n    font-family : \"avengersFont\";\n    /*color : #0B0930;*/\n`\nexport const Title = styled.h1`\n    text-align : center;\n    margin : 5%;\n    /* era 5%*/\n    font-size : 4rem ;\n    font-family : \"avengersFont\";\n    /*color : #0B0930;*/\n    color :  #2C2A89 \n`\nexport const NavTitle = styled.h2`\n    margin-top : 15% ;\n    text-align : center;\n    font-size : 3rem ;\n    font-family : \"avengersFont\";\n   /* color : #0B0930;*/\n   color :  #ffffff\n`\nexport const ButtonTitle = styled.h3`\n    font-family : 'avengersFont';\n    color : #5C49C6;\n\n`\nexport const Menu = styled.div`\n    margin-top : 10%;\n    margin-left : 25%;\n    width : 50%;\n    display : flex;\n\tflex-flow: column nowrap;\n    padding-left : 5%;\n    padding-right : 5%;\n    background-color : none;\n    height : 80%;\n`","import React, { Component } from 'react'\nimport { Row, Col, Container, Media } from 'reactstrap'\n//images\nimport ContainerImage from '../images/heroAppContainer.jpg'\nimport PortraitImage from '../images/portrairWelcomeImage.jpg'\nimport PortraitImage2 from '../images/walpaperView1.jpg'\nimport PortraitImage3 from '../images/Portrait3.jpg'\n\nimport { withConfigConsumer } from 'antd/lib/config-provider/context'\nimport { MainImage } from '../styles/syles'\nimport { Grid } from '@material-ui/core'\n\n//StyledComponents\nimport { Title, Menu, ButtonTitle } from '../styles/syles'\n\n//Button\nimport { Button } from 'reactstrap';\n\n//Router\nimport {\n    Link,\n    BrowserRouter as Router,\n\n} from 'react-router-dom'\nconst styleImg = {\n\n    width: '100%',\n    maxHeight: \"100vh\",\n    objectFit: 'cover',\n    borderRadius: '0px  0px 10px 10px'\n\n}\n\nconst styleButton = {\n    padding: '3%',\n    fontFamily: 'avengersFont',\n    marginTop: \"3%\",\n    fontSize: '4vh',\n    color: '#1A1A64',\n    //backgroundColor : '#1A1A64',\n    textAling: 'center',\n    borderRadius: '25px'\n}\n\nconst linkColor = {\n\n    underline: 'none',\n    listStyle: 'none',\n    color: \"#1A1A64\"\n}\n\nclass WelcomeBody extends Component {\n\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n    componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n    }\n    render() {\n        return (\n            <div style={{ backgroundColor: 'whitesmoke' }}\n            >\n                <Row className=\"no-gutters\">\n\n                    {this.state.width > this.state.height ? (\n                        <Col xl={4} xs={0}>\n                            <img style={styleImg} className=\"img-fluid\" src={PortraitImage3}/*src ={this.state.height> this.state.width ? PortraitImage : ContainerImage }*/></img>\n                        </Col>\n                    ) : ''\n                    }\n                    <Col xl={{ size: 4 }} xs={{ size: 12 }}>\n                        <Title>\n                            Hero App\n                        </Title>\n                        <Menu>\n\n\n                            <Button style={styleButton} outline color=\"primary\" > <Link to=\"/game\" style={linkColor}> Iniciar o Jogo</Link></Button>\n                            <br />\n\n                            <Button style={styleButton} outline color=\"primary\">Sobre</Button>\n                            <br />\n\n                            <Button style={styleButton} outline color=\"primary\"><a style={linkColor} href=\"http://github.com/mwerneck1956\" target=\"_blank\">GitHub </a></Button>\n\n                        </Menu>\n                    </Col>\n                    {this.state.width > this.state.height ? (\n                        <Col xl={4} xs={{ offset: 12 }}>    \n\n                            <img style={styleImg} className=\"img-fluid\" src={PortraitImage2} ></img>\n                        </Col>\n                    ) : ''}\n                </Row>\n\n            </div>\n        )\n    }\n}\n\nexport default WelcomeBody","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport {NavTitle } from '../styles/syles'\nconst MainNavbar = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar style={{backgroundColor :\"#180040\" }} light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\"> <NavTitle>Hero App </NavTitle> </NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"/components/\">Components</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default MainNavbar;","import React from 'react';\n\nexport default class ShowWindowDimensions extends React.Component {\n  state = { width: 0, height: 0 };\n  render() {\n    return <span>Window size: {this.state.width} x {this.state.height}</span>;\n  }\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n}\n","import React, { Component } from 'react'\n\n\n//Reacstrap\nimport { Container, Col, Row, Button } from 'reactstrap'\n\n//Styled-Components\nimport { Title, ButtonTitle, Menu } from '../styles/syles'\n\n\n\nimport {\n    Link,\n    BrowserRouter as Router,\n\n} from 'react-router-dom'\n\n//Images\n\nimport AvengersBg from '../images/AvengersBg.jpg'\nimport AvengersPortrait from '../images/portraitBg.jpg'\nconst linkColor = {\n\n    underline: 'none',\n    listStyle: 'none',\n    color: \"#1A1A64\"\n}\nconst styleButton = {\n    padding: '3%',\n    fontFamily: 'avengersFont',\n    marginTop: \"3%\",\n    fontSize: '3vh',\n    color: 'white',\n    textAling: 'center',\n    backgroundColor : '#807F83',\n    borderRadius: '25px'\n}\nexport default class WelcomeWindow extends Component {\n \n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n    componentDidMount() {\n        window.addEventListener('resize', this.updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight\n        }\n    }\n    render() {\n        return (\n            <div\n\n            >\n                <Row className=\"no-gutters\">\n                    <img style={{ position: \"fixed\", width: \"100%\", objectFit: 'cover' }} src={this.state.height > this.state.width ? AvengersPortrait :AvengersBg }  className=\"img-fluid\" />\n                    <Col xl={{ offset: 7, size: 5 } } xs ={{size : 12}}>\n                        <Menu>\n                            <Title>\n                                Hero <br />\n                                App\n                        </Title>\n\n                            <Button style={styleButton} outline  color=\"secondary\" > <Link to=\"/game\" style={linkColor}> Iniciar o Jogo</Link></Button>\n                            <br />\n\n                            <Button style={styleButton} color=\"secondary\"><Link style={linkColor} to = \"/aboutUs\">Sobre</Link></Button>\n                            <br />\n\n                            <Button style={styleButton}  color=\"secondary\"><a style={linkColor} href=\"http://github.com/mwerneck1956\" target=\"_blank\">GitHub </a></Button>\n\n                        </Menu>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport WelcomeBody from '../components/WelcomeBody'\nimport WelcomeWindow from '../components/WelcomeWindow'\nclass WelcomePage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div style={{backgroundColor : \"whitesmoke\" , height : '100vh' ,}}>\n            {/*<WelcomeBody /> */}\n             <WelcomeWindow/>\n            </div>\n                )\n            }\n        }\n        \nexport default WelcomePage","import Axios from \"axios\";\n\n\nconst api = Axios.create({\n  baseURL: \"https://\" +  \"cdn.rawgit.com/akabab/superhero-api/0.2.0/api\"\n // headers: { \"X-Requested-With\": \"XMLHttpRequest\" }\n});\n\nexport default api;","import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\n\n\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 5;\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroLoaded: false,\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n            buttons = this.state.ActualHeroes.map(heroSelected => (\n                <Button onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n            ))\n        }\n    }\n\n    verifyName = (e) => {\n\n        if (this.state.pickedHeroe.name === e.target.value) {\n            alert('parabens voce acertou')\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            this.setState({ errors: this.state.errors + 1 })\n            alert('Eroooooou!')\n        }\n        this.setState({ heroLoaded: false , pickedHeroe : null })\n    }\n    selectHeroes = () => {\n        let vetHerois = [], pickedHero\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if (i === 0) {\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n           \n            vetHerois.push(this.state.heroeList[numSorteado])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n\n   \n        return vetHerois\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n            let heroes = this.selectHeroes()\n            heroes.map(hero => (\n                this.state.ActualHeroes.push(hero)\n            ))\n            this.state.ActualHeroes.concat(this.selectHeroes())\n\n\n            if (this.state.ActualHeroes !== null) {\n                var indiceEscolhido = this.numAleatorio(this.state.ActualHeroes.length) //Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n                // para  posteriormente deletar o heroi da minha lista de herois\n                this.setState({ pickedHeroe: this.state.ActualHeroes[indiceEscolhido], heroLoaded: true })\n\n                //Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\n                if (this.state.pickedHeroe) {\n                    this.state.heroeList.splice(indiceEscolhido, 1)\n                    console.log('heroe lsit perdeu 1', this.state.heroeList)\n                }\n\n\n            }\n            console.log('vetor de herois ', this.state.heroeList)\n            console.log('pickado ', this.state.pickedHeroe)\n        }\n        return (\n            <div>\n                <Grid\n                    style={{ backgroundColor: 'whitesmoke' }}\n                    container spacing={1}\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4}\n\n                    >\n                        <Item> Pontuacao : {this.state.points} </Item>\n\n                       \n\n                        <SubItem>\n                            \n                            Acertos : {this.state.sucessesses}\n                            <br/>\n                            Errors : {this.state.errors}\n\n                        </SubItem>\n\n\n                    </Grid>\n                    <Grid item\n                        xl={6}>\n                        {this.state.pickedHeroe ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.md} />}\n                        >\n\n                            <Meta title=\"\" description=\"\" />\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                    <Grid\n                                        fluid\n                                    >\n                                        <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                        <br />\n                                    </Grid>\n\n                                )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                            </Grid>\n\n                        </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                        }\n                    </Grid>\n                    <Grid\n                        item xl={2}\n                    >\n\n                    </Grid>\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen","import React, { Component } from 'react'\nimport GameScreen from '../components/GameScreen'\nimport MainNavbar from '../components/MainNavbar'\nclass GameView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MainNavbar/>\n                <GameScreen/>\n            </div>\n        )\n    }\n}\n\nexport default GameView","import React from 'react';\nimport logo from './logo.svg';\nimport WelcomeBody from '../src/components/WelcomeBody'\nimport MainNavbar from './components/MainNavbar'\nimport ShowWindowDimension from './components/ShowWindowDimension'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom'\n//Views\nimport WelcomePage from './views/WelcomePage'\nimport GameView from './views/GameView'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      \n        <Switch>\n          <Route exact path=\"/home\">\n            <WelcomePage />\n          </Route>\n          <Route path=\"/game\">\n            <GameView/>\n          </Route>\n          <Redirect from='/' to='/home' /> \n        </Switch>\n      \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/portrairWelcomeImage.39bad02f.jpg\";"],"sourceRoot":""}