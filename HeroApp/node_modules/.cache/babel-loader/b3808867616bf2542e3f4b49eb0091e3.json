{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\nlet heroeList;\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.heroesList = this.state.heroeList !== null ? this.state.heroeList.map(hero => React.createElement(\"ul\", {\n      key: hero.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, hero.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, hero.slug), React.createElement(\"img\", {\n      src: hero.images.xs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))) : null;\n    this.state = {\n      heroeList: null\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate() {\n    console.log('lista de herois ', this.state.heroeList);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","heroeList","GameScreen","constructor","props","heroesList","state","map","hero","id","name","slug","images","xs","componentDidMount","get","then","res","setState","data","catch","error","alert","componentDidUpdate","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAIC,SAAJ;;AACA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAsBnBC,UAtBmB,GAsBL,KAAKC,KAAL,CAAWL,SAAX,KAAyB,IAAzB,GAAgC,KAAKK,KAAL,CAAWL,SAAX,CAAqBM,GAArB,CAA0BC,IAAI,IACxE;AAAI,MAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,IAAV,CAFJ,EAGI;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,CAAYC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAD0C,CAAhC,GAMT,IA5Bc;AAGf,SAAKP,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,WAAR,EACKC,IADL,CACUC,GAAG,IAED,KAAKC,QAAL,CAAc;AACVjB,MAAAA,SAAS,EAAEgB,GAAG,CAACE;AADL,KAAd,CAHZ,EAOMC,KAPN,CAOYC,KAAK,IAAIC,KAAK,CAAC,wCAAyCD,KAA1C,CAP1B;AAQH;;AACDE,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAiC,KAAKnB,KAAL,CAAWL,SAA5C;AACH;;AASDyB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AApC8B;;AAuCnC,eAAexB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\nlet heroeList\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroeList: null\n        }\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")    \n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' +  error))\n    }\n    componentDidUpdate(){\n        console.log('lista de herois ' , this.state.heroeList)\n    }\n    \n    heroesList =  this.state.heroeList !== null ? this.state.heroeList.map( hero => (\n        <ul key ={hero.id}>\n            <li>{hero.name}</li>\n            <li>{hero.slug}</li>\n            <img src={hero.images.xs}></img>\n        </ul>\n    )) : null\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}