{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios'; //Reacstrap\n\nimport { Button, Spinner } from 'reactstrap'; //Ant design\n\nimport { Card, Row, Col } from 'antd'; //Styled Components \n\nimport { Item, SubItem } from '../styles/syles'; //MAterial Ui\n\nimport { Grid } from '@material-ui/core';\nconst {\n  Meta\n} = Card;\nlet buttons;\nconst numCards = 10;\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numAleatorio = range => {\n      return Math.floor(Math.random() * range); //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    };\n\n    this.verifyName = e => {\n      if (this.state.pickedHeroe.name === e.target.value) {\n        alert('parabens voce acertou');\n        this.setState({\n          points: this.state.points + 20,\n          sucessesses: this.state.sucessesses + 1\n        });\n      } else {\n        this.setState({\n          errors: this.state.errors + 1\n        });\n        alert('Eroooooou!');\n      }\n\n      this.setState({\n        heroLoaded: false,\n        pickedHeroe: null\n      });\n    };\n\n    this.selectHeroes = () => {\n      let vetHerois = [],\n          pickedHero;\n      let numSorteado = this.numAleatorio(500);\n      var i = 0;\n\n      while (i < 3) {\n        if (i === 0) {\n          pickedHero = this.state.heroeList[numSorteado];\n        }\n\n        vetHerois.push(this.state.heroeList[numSorteado]);\n        numSorteado = this.numAleatorio(500);\n        i++;\n      }\n\n      return vetHerois;\n    };\n\n    this.state = {\n      numCards: 0,\n      heroLoaded: false,\n      heroeList: null,\n      VisitedHeroes: [],\n      ActualHeroes: [],\n      pickedHeroe: null,\n      points: 0,\n      sucessesses: 0,\n      errors: 0,\n      maxHeroes: 5,\n      choices: 0\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n      let actualHeros = this.selectHeroes();\n      buttons = this.state.ActualHeroes.map(heroSelected => React.createElement(Button, {\n        onClick: this.verifyName,\n        value: heroSelected.name,\n        outline: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, heroSelected.name, \" \"));\n    }\n  }\n\n  render() {\n    if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n      this.state.ActualHeroes = [];\n      let heroes = this.selectHeroes();\n      heroes.map(hero => this.state.ActualHeroes.push(hero));\n      this.state.ActualHeroes.concat(this.selectHeroes());\n\n      if (this.state.ActualHeroes !== null) {\n        var indiceEscolhido = this.numAleatorio(this.state.ActualHeroes.length); //Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n        // para  posteriormente deletar o heroi da minha lista de herois\n\n        this.setState({\n          pickedHeroe: this.state.ActualHeroes[indiceEscolhido],\n          heroLoaded: true\n        }); //Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\n\n        if (this.state.pickedHeroe) {\n          this.state.heroeList.splice(indiceEscolhido, 1);\n          console.log('heroe lsit perdeu 1', this.state.heroeList);\n        }\n      }\n\n      console.log('vetor de herois ', this.state.heroeList);\n      console.log('pickado ', this.state.pickedHeroe);\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'whitesmoke',\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      justify: \"space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xl: 4,\n      xs: \"auto\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Pontuacao : \", this.state.points, \" \"), React.createElement(SubItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Acertos : \", this.state.sucessesses, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \"Errors : \", this.state.errors)), React.createElement(Grid, {\n      item: true,\n      className: \"mt-3 mb-2\",\n      xl: 4,\n      xs: 8,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.pickedHeroe ? React.createElement(Card, {\n      hoverable: true,\n      style: {\n        width: 300,\n        backgroundColor: 'whitesmoke',\n        marginTop: \"5%\"\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          borderRadius: '15px 15px 15px 15px'\n        },\n        className: \"img-fluid\",\n        src: this.state.pickedHeroe.images.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\",\n      description: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-1\",\n      onClick: this.verifyName,\n      value: heroSelected.name,\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, heroSelected.name, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))) : React.createElement(Spinner, {\n      style: {\n        marginLeft: \"25%\",\n        marginTop: '25%',\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))) : React.createElement(Spinner, {\n      style: {\n        marginLeft: \"25%\",\n        marginTop: '25%',\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      className: \"mt-5\",\n      item: true,\n      xl: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(SubItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Tempo Restante :\"), React.createElement(SubItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Cards Restantes :\"))));\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Button","Spinner","Card","Row","Col","Item","SubItem","Grid","Meta","buttons","numCards","GameScreen","constructor","props","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","alert","setState","points","sucessesses","errors","heroLoaded","selectHeroes","vetHerois","pickedHero","numSorteado","i","heroeList","push","VisitedHeroes","ActualHeroes","maxHeroes","choices","componentDidMount","get","then","res","data","catch","error","componentDidUpdate","prevState","actualHeros","map","heroSelected","render","heroes","hero","concat","indiceEscolhido","length","splice","console","log","backgroundColor","height","width","marginTop","borderRadius","images","md","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\n\n\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 10;\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            numCards : 0,\n            heroLoaded: false,\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n            buttons = this.state.ActualHeroes.map(heroSelected => (\n                <Button onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n            ))\n        }\n    }\n\n    verifyName = (e) => {\n\n        if (this.state.pickedHeroe.name === e.target.value) {\n            alert('parabens voce acertou')\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            this.setState({ errors: this.state.errors + 1 })\n            alert('Eroooooou!')\n        }\n        this.setState({ heroLoaded: false , pickedHeroe : null })\n    }\n    selectHeroes = () => {\n        let vetHerois = [], pickedHero\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if (i === 0) {\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n           \n            vetHerois.push(this.state.heroeList[numSorteado])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n\n   \n        return vetHerois\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n            let heroes = this.selectHeroes()\n            heroes.map(hero => (\n                this.state.ActualHeroes.push(hero)\n            ))\n            this.state.ActualHeroes.concat(this.selectHeroes())\n\n\n            if (this.state.ActualHeroes !== null) {\n                var indiceEscolhido = this.numAleatorio(this.state.ActualHeroes.length) //Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n                // para  posteriormente deletar o heroi da minha lista de herois\n                this.setState({ pickedHeroe: this.state.ActualHeroes[indiceEscolhido], heroLoaded: true })\n\n                //Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\n                if (this.state.pickedHeroe) {\n                    this.state.heroeList.splice(indiceEscolhido, 1)\n                    console.log('heroe lsit perdeu 1', this.state.heroeList)\n                }\n\n\n            }\n            console.log('vetor de herois ', this.state.heroeList)\n            console.log('pickado ', this.state.pickedHeroe) \n        }\n        return (\n            <div style={{ backgroundColor: 'whitesmoke'  , height : \"100%\"}}>\n                <Grid\n                    \n                    container spacing={1}\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4} \n                        xs = \"auto\"\n                        spacing ={2}\n\n                    >\n                        <Item> Pontuacao : {this.state.points} </Item>\n\n                        <SubItem>\n                            \n                            Acertos : {this.state.sucessesses}\n                            <br/>\n                            Errors : {this.state.errors}\n\n                        </SubItem>\n\n\n                    </Grid>\n                    <Grid item\n                        className =\"mt-3 mb-2\"\n                        xl ={4} xs = {8} spacing={2}>\n                        {this.state.pickedHeroe ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.md} />}\n                        >\n\n                            <Meta title=\"\" description=\"\" />\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                    <Grid\n                                        fluid\n                                    >\n                                        <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                        <br />\n                                    </Grid>\n\n                                )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                            </Grid>\n\n                        </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                        }\n                    </Grid>\n                    <Grid \n                        className = \"mt-5\"\n                        item xl={2}\n                    >\n                            <SubItem>\n                                Tempo Restante :\n                            </SubItem>\n                            <SubItem>\n                                Cards Restantes :\n                            </SubItem>\n                    </Grid>\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}