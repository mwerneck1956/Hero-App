{"ast":null,"code":"import _classCallCheck from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import api from'../services/api';import axios from'axios';//Components\nimport DialogStatistics from'./DialogStatistics';//Reacstrap\nimport{Button,Spinner}from'reactstrap';//Ant design\nimport{Card}from'antd';//Reactstrap\nimport{Col,Row,Container}from'reactstrap';//Styled Components \nimport{Item,SubItem,DivCard,Panel}from'../styles/syles';//MAterial Ui\nimport{Grid}from'@material-ui/core';import{Snackbar}from'@material-ui/core';import{green}from'@material-ui/core/colors';import MuiAlert from'@material-ui/lab/Alert';//Material Ui Icons\nimport CheckIcon from\"@material-ui/icons/Check\";import ErrorIcon from\"@material-ui/icons/Error\";import TimerIcon from'@material-ui/icons/Timer';//Images\nimport BackgroundImage from'../images/BackgroundGameScreen.jpg';import LoadingImage from'../images/loading.gif';var Meta=Card.Meta;var buttons;var numCards=10;var Snack={message:'',color:'',icon:null};var LoadingSpinner=function LoadingSpinner(){return React.createElement(Spinner,{style:{marginTop:'5%',width:'3rem',height:'3rem'}});};var GameScreen=/*#__PURE__*/function(_Component){_inherits(GameScreen,_Component);function GameScreen(props){var _this;_classCallCheck(this,GameScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameScreen).call(this,props));_this.HandleImageLoaded=function(){_this.setState({imageLoaded:true});};_this.numAleatorio=function(range){return Math.floor(Math.random()*range);//Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n};_this.verifyName=function(e){//Se o botão foi clickado Adiciono 1 a meus cards visitado\n_this.state.numCards=_this.state.numCards+1;if(_this.state.pickedHeroe.name===e.target.value){Snack.message=\"Você Acertou!\";Snack.color=\"success\";Snack.icon=CheckIcon;_this.setState({points:_this.state.points+20,sucessesses:_this.state.sucessesses+1});}else{Snack.message=\"Você errou!\";Snack.color=\"warning\";Snack.icon=ErrorIcon;_this.setState({errors:_this.state.errors+1});}_this.setState({heroLoaded:false,pickedHeroe:null,imageLoaded:false});_this.loadingSnackBar(Snack);if(_this.state.numCards===numCards){_this.verifyWinner();}};_this.verifyWinner=function(){clearInterval(_this.interval);if(_this.state.sucessesses>_this.state.errors){_this.setState({openStatistics:true,win:true});}else{_this.setState({openStatistics:true,win:false});}};_this.selectHeroes=function(){var numSorteado=_this.numAleatorio(_this.state.heroeList.length);var heroiSorteado=_this.state.heroeList[numSorteado];//Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n_this.state.heroeList.splice(numSorteado,1);//Deletei o heroi do meu vetor de herois\nreturn heroiSorteado;};_this.updateCounter=function(){_this.setState({counter:_this.state.counter-1});};_this.state={counter:60,win:false,imageLoaded:false,errorsPercentage:null,sucessessesPercentage:null,openStatistics:false,snackBarColor:'',snackBarMessage:'',snackbarIcon:null,snackBarOpen:false,numCards:0,//Contar quantos numeros de cards ja foram exibidos\nheroLoaded:false,//Controlar se o heroi esta carregado ou não \nheroeList:null,//Lista contendo todos os herois recebidos da api\nVisitedHeroes:[],//Vetor com os herois ja visitados para evitir duplicatas\nActualHeroes:[],//\npickedHeroe:null,points:0,sucessesses:0,errors:0,maxHeroes:5,choices:0};return _this;}_createClass(GameScreen,[{key:\"Alert\",value:function Alert(props){return React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}},{key:\"loadingSnackBar\",value:function loadingSnackBar(snack){//Função para carregar a snack bar falando se usuario errou ou acertou o héroi\nthis.setState({snackBarColor:snack.color,snackBarMessage:snack.message,snackbarIcon:snack.icon,snackBarOpen:true});setTimeout(function(){this.setState({snackBarOpen:false});}.bind(this),1500);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.interval=setInterval(this.updateCounter,1000);setTimeout(this.verifyWinner,60000);// this.updateInterval()\napi.get(\"/all.json\").then(function(res){return _this2.setState({heroeList:res.data});}).catch(function(error){return alert('erro de comunicação com o servidor '+error);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){if(prevState.ActualHeroes!==this.state.ActualHeroes&&this.state.heroeList!==null){var actualHeros=this.selectHeroes();}}},{key:\"render\",value:function render(){var _this3=this;if(this.state.heroeList!==null&&this.state.heroLoaded===false){this.state.ActualHeroes=[];var pickedHero=this.selectHeroes();// Pego o heroi escolhido atraves da funcão auxiliar\nthis.setState({pickedHeroe:pickedHero,heroLoaded:true});var random=this.numAleatorio(3);//Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\nfor(var i=0;i<3;i++){if(i===random){this.state.ActualHeroes.push(pickedHero);}else{this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)]);}}}if(this.state.counter===0){clearInterval(this.interval);}var styleBackground={opacity:\"0.2\",position:\"absolute\",width:\"100%\",objectFit:'cover',height:\"100vh\"};return React.createElement(Grid,{style:{overflowX:\"block\"}},React.createElement(\"img\",{style:styleBackground,src:BackgroundImage}),React.createElement(Row,{className:\"row no-gutters justify-content-center\"},React.createElement(Col,{xl:\"12\",className:\"d-flex justify-content-center\"},React.createElement(Item,null,\" Points : \",this.state.points,\"\\xA0 \\xA0 \\xA0\",React.createElement(CheckIcon,{style:{color:green[500]},fontSize:\"large\"}),\" : \",this.state.sucessesses,\"\\xA0  \\xA0\",React.createElement(ErrorIcon,{style:{color:\"#B33A3A    \"},fontSize:\"large\"}),\" : \",this.state.errors)),React.createElement(Col,{xl:\"12\",className:\"d-flex justify-content-center \"},React.createElement(SubItem,null,React.createElement(TimerIcon,{fontSize:\"large\"}),\"   \",this.state.counter))),React.createElement(Row,null,React.createElement(Col,{xl:\"12\",className:\"d-flex justify-content-center\"},this.state.pickedHeroe?React.createElement(Card,{hoverable:true,style:{width:300},cover:React.createElement(\"img\",{onLoad:this.HandleImageLoaded,alt:\"example\",style:{objectFit:\"cover\",width:350,maxHeight:\"60vh\",height:\"450px\",borderRadius:'15px 15px 15px 15px'},className:\"img-fluid\",src:this.state.imageLoaded?this.state.pickedHeroe.images.sm:\"https://i.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.webp\"})},React.createElement(Meta,{title:\"\",description:\"\"}),React.createElement(Grid,{xl:12,container:true,direction:\"col\",justify:\"center\",alignItems:\"center\"},this.state.ActualHeroes?this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Button,{className:\"mt-1\",onClick:_this3.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \");}):React.createElement(LoadingSpinner,null))):React.createElement(LoadingSpinner,null))),React.createElement(DialogStatistics,{open:this.state.openStatistics,won:this.state.win,errors:this.state.errors/this.state.numCards*100,sucessess:this.state.sucessesses/this.state.numCards*100,points:this.state.points+this.state.counter}),React.createElement(Snackbar,{place:\"bc\",open:this.state.snackBarOpen,closeNotification:function closeNotification(){return _this3.setState({snackBarOpen:false});},close:true},React.createElement(MuiAlert,{elevation:6,variant:\"filled\",severity:this.state.snackBarColor},this.state.snackBarMessage)));}}]);return GameScreen;}(Component);export default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","DialogStatistics","Button","Spinner","Card","Col","Row","Container","Item","SubItem","DivCard","Panel","Grid","Snackbar","green","MuiAlert","CheckIcon","ErrorIcon","TimerIcon","BackgroundImage","LoadingImage","Meta","buttons","numCards","Snack","message","color","icon","LoadingSpinner","marginTop","width","height","GameScreen","props","HandleImageLoaded","setState","imageLoaded","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","points","sucessesses","errors","heroLoaded","loadingSnackBar","verifyWinner","clearInterval","interval","openStatistics","win","selectHeroes","numSorteado","heroeList","length","heroiSorteado","splice","updateCounter","counter","errorsPercentage","sucessessesPercentage","snackBarColor","snackBarMessage","snackbarIcon","snackBarOpen","VisitedHeroes","ActualHeroes","maxHeroes","choices","snack","setTimeout","bind","setInterval","get","then","res","data","catch","error","alert","prevState","actualHeros","pickedHero","i","push","styleBackground","opacity","position","objectFit","overflowX","maxHeight","borderRadius","images","sm","map","heroSelected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Components\nimport DialogStatistics from './DialogStatistics'\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card } from 'antd';\n\n\n\n\n\n//Reactstrap\nimport { Col, Row, Container } from 'reactstrap'\n//Styled Components \nimport { Item, SubItem, DivCard, Panel } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\nimport { Snackbar } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\n//Material Ui Icons\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\n//Images\nimport BackgroundImage from '../images/BackgroundGameScreen.jpg'\nimport LoadingImage from '../images/loading.gif'\n\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 10;\n\nconst Snack = {\n    message: '',\n    color: '',\n    icon: null\n}\n\n\n\nconst LoadingSpinner = () => {\n    return (\n        <Spinner style={{ marginTop: '5%', width: '3rem', height: '3rem' }} />\n    )\n}\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            counter: 60,\n            win: false,\n            imageLoaded: false,\n            errorsPercentage: null,\n            sucessessesPercentage: null,\n            openStatistics: false,\n            snackBarColor: '',\n            snackBarMessage: '',\n            snackbarIcon: null,\n            snackBarOpen: false,\n            numCards: 0, //Contar quantos numeros de cards ja foram exibidos\n            heroLoaded: false, //Controlar se o heroi esta carregado ou não \n            heroeList: null, //Lista contendo todos os herois recebidos da api\n            VisitedHeroes: [], //Vetor com os herois ja visitados para evitir duplicatas\n            ActualHeroes: [], //\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n    Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n    HandleImageLoaded = () => {\n        this.setState({ imageLoaded: true })\n    }\n    loadingSnackBar(snack) { //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n        this.setState({\n            snackBarColor: snack.color,\n            snackBarMessage: snack.message,\n            snackbarIcon: snack.icon,\n            snackBarOpen: true\n        });\n        setTimeout(\n            function () {\n                this.setState({ snackBarOpen: false });\n            }.bind(this),\n            1500\n        );\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n\n    componentDidMount() {\n        this.interval = setInterval(this.updateCounter, 1000);\n        setTimeout(this.verifyWinner, 60000)\n        // this.updateInterval()\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n        }\n    }\n\n    verifyName = (e) => {\n\n        //Se o botão foi clickado Adiciono 1 a meus cards visitado\n        this.state.numCards = this.state.numCards + 1\n        if (this.state.pickedHeroe.name === e.target.value) {\n            Snack.message = \"Você Acertou!\"\n            Snack.color = \"success\"\n            Snack.icon = CheckIcon\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            Snack.message = \"Você errou!\"\n            Snack.color = \"warning\"\n            Snack.icon = ErrorIcon\n            this.setState({ errors: this.state.errors + 1 })\n\n        }\n        this.setState({ heroLoaded: false, pickedHeroe: null, imageLoaded: false })\n        this.loadingSnackBar(Snack)\n        if (this.state.numCards === numCards) {\n            this.verifyWinner()\n        }\n    }\n\n    verifyWinner = () => {\n        clearInterval(this.interval)\n\n        if (this.state.sucessesses > this.state.errors) {\n            this.setState({ openStatistics: true, win: true })\n        } else {\n            this.setState({ openStatistics: true, win: false })\n\n        }\n    }\n\n    selectHeroes = () => {\n\n        let numSorteado = this.numAleatorio(this.state.heroeList.length)\n        let heroiSorteado = this.state.heroeList[numSorteado] //Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n        this.state.heroeList.splice(numSorteado, 1) //Deletei o heroi do meu vetor de herois\n\n        return heroiSorteado\n    }\n\n    updateCounter = () => {\n        this.setState({ counter: this.state.counter - 1 })\n    }\n\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n\n            let pickedHero = this.selectHeroes() // Pego o heroi escolhido atraves da funcão auxiliar\n\n            this.setState({ pickedHeroe: pickedHero, heroLoaded: true })\n\n            let random = this.numAleatorio(3) //Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\n            for (var i = 0; i < 3; i++) {\n                if (i === random) {\n                    this.state.ActualHeroes.push(pickedHero)\n                } else {\n                    this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)])\n                }\n            }\n        }\n        if (this.state.counter === 0) {\n            clearInterval(this.interval)\n        }\n        const styleBackground = {\n            opacity: \"0.2\",\n            position: \"absolute\",\n            width: \"100%\",\n            objectFit: 'cover',\n            height: \"100vh\",\n          \n        }\n        return (\n\n            <Grid\n               style={{overflowX: \"block\"}}\n            >\n\n                <img style={styleBackground} src={BackgroundImage} />\n\n                <Row  className=\"row no-gutters justify-content-center\">\n                    <Col xl=\"12\" className=\"d-flex justify-content-center\">\n                        <Item> Points : {this.state.points}\n                            &nbsp;\t&nbsp;\t&nbsp;\n                            <CheckIcon style={{ color: green[500] }} fontSize=\"large\" /> : {this.state.sucessesses}\n                            &nbsp;\t &nbsp;\n                            <ErrorIcon style={{ color: \"#B33A3A    \" }} fontSize=\"large\" /> : {this.state.errors}\n                        </Item>\n                    </Col>\n                    <Col xl = \"12\" className=\"d-flex justify-content-center \">\n                        <SubItem>\n                            <TimerIcon fontSize=\"large\" />   {this.state.counter}\n                        </SubItem>\n\n                    </Col>\n                </Row>\n                <Row >\n                    <Col xl=\"12\" className=\"d-flex justify-content-center\">\n                        {this.state.pickedHeroe ?\n                            <Card\n                                hoverable\n                                style={{ width: 300}}\n                                cover={\n                                        <img onLoad={this.HandleImageLoaded} alt=\"example\" style={{ objectFit: \"cover\", width: 350 , maxHeight : \"60vh\", height  :\"450px\", borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.imageLoaded ? this.state.pickedHeroe.images.sm : \"https://i.giphy.com/media/xTk9ZvMnbIiIew7IpW/giphy.webp\"} />\n                                }\n                            >\n                                <Meta title=\"\" description=\"\" />\n                                <Grid\n                                    xl={12}\n                                    container\n                                    direction=\"col\"\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                    {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n\n                                        <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n\n                                    )) : <LoadingSpinner />}\n                                </Grid>\n\n                            </Card> : <LoadingSpinner />\n\n                        }\n                    </Col>\n    \n                </Row>\n\n\n\n                <DialogStatistics\n                    open={this.state.openStatistics}\n                    won={this.state.win}\n                    errors={this.state.errors / this.state.numCards * 100}\n                    sucessess={this.state.sucessesses / this.state.numCards * 100} points={this.state.points + this.state.counter}\n                />\n\n\n\n                <Snackbar\n                    place=\"bc\"\n                    open={this.state.snackBarOpen}\n                    closeNotification={() => this.setState({ snackBarOpen: false })}\n                    close\n                >\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.snackBarColor}>\n                        {this.state.snackBarMessage}\n                    </MuiAlert>\n\n                </Snackbar>\n\n\n            </Grid>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}