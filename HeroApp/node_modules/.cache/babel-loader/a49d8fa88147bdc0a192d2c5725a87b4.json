{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\nimport { Row, Col, Button } from 'reactstrap';\nimport { Card } from 'antd';\nconst {\n  Meta\n} = Card;\n\nconst numAleatorio = () => {\n  return Math.floor(Math.random() * 500);\n};\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numAleatorio = () => {\n      return Math.floor(Math.random() * 500); //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    };\n\n    this.selectHeroes = () => {\n      console.log('selecionei herois');\n      var i = 0;\n\n      while (i < 3) {\n        let numSorteado = this.numAleatorio();\n        let vetHerois = [];\n\n        if (i == 0) {\n          this.setState({\n            pickedHeroe: this.state.heroeList[numAleatorio]\n          });\n        }\n        /*\n        this.setState({\n            VisitedHeroes : this.state.VisitedHeroes.push(this.state.heroeList[numSorteado]) , //Guardo o id do numero sorteado para que nao se repitam cartas\n            ActualHeros: this.state.ActualHeros.push( this.state.heroeList[numSorteado])\n        })\n        */\n\n\n        vetHerois.push(this.state.heroeList.push(numAleatorio));\n        i++;\n      }\n    };\n\n    this.state = {\n      heroeList: null,\n      VisitedHeroes: [],\n      ActualHeroes: [],\n      pickedHeroe: null\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n\n    if (this.state.heroeList) {\n      this.selectHeroes();\n      alert('selecionado herois ', this.state.ActualHeroes);\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    console.log('lista de herois ', this.state.heroeList);\n\n    if (prevState != this.state) {\n      this.selectHeroes();\n    }\n  }\n\n  render() {\n    console.log(this.numAleatorio());\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      xl: {\n        size: 4,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xl: {\n        size: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.heroeList ? React.createElement(Card, {\n      hoverable: true,\n      style: {\n        width: 300,\n        backgroundColor: 'whitesmoke'\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          borderRadius: '15px'\n        },\n        className: \"img-fluid\",\n        src: this.state.heroeList[this.numAleatorio()].images.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\",\n      description: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.heroeList[this.numAleatorio()].name), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Nome 1\"), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Nome 1\")) : ''), React.createElement(Col, {\n      xl: {\n        size: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Row","Col","Button","Card","Meta","numAleatorio","Math","floor","random","GameScreen","constructor","props","selectHeroes","console","log","i","numSorteado","vetHerois","setState","pickedHeroe","state","heroeList","push","VisitedHeroes","ActualHeroes","componentDidMount","get","then","res","data","catch","error","alert","componentDidUpdate","prevState","render","size","offset","width","backgroundColor","borderRadius","images","md","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\nimport { Row, Col, Button } from 'reactstrap'\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\n\nconst numAleatorio = () => {\n    return Math.floor(Math.random() * 500)\n}\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null\n        }\n    }\n\n    numAleatorio = () => {\n        return Math.floor(Math.random() * 500) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n        \n        if(this.state.heroeList){\n            this.selectHeroes()\n           alert('selecionado herois ' ,this.state.ActualHeroes)\n        }\n    }\n    componentDidUpdate(prevState) {\n        console.log('lista de herois ', this.state.heroeList)\n        if(prevState != this.state){\n            this.selectHeroes()\n        }\n\n    }\n    selectHeroes = () => {\n        console.log('selecionei herois')\n        var i = 0;\n        while (i < 3) {\n            let numSorteado = this.numAleatorio()\n            let vetHerois = []\n            if(i == 0){\n                this.setState({pickedHeroe : this.state.heroeList[numAleatorio]})\n            }\n            /*\n            this.setState({\n                VisitedHeroes : this.state.VisitedHeroes.push(this.state.heroeList[numSorteado]) , //Guardo o id do numero sorteado para que nao se repitam cartas\n                ActualHeros: this.state.ActualHeros.push( this.state.heroeList[numSorteado])\n            })\n            */\n           vetHerois.push(this.state.heroeList.push(numAleatorio))\n            i++\n        }\n    }\n    render() {\n        console.log(this.numAleatorio())\n        return (\n            <div>\n                <Row>\n                    {/*Coluna das pontuações , acertos e erros*/}\n                    <Col xs={12} sm={12} xl={{ size: 4, offset: 1 }}>\n\n                    </Col>\n                    {/*Coluna das cards */}\n                    <Col xl={{ size: 5 }}>\n                        {this.state.heroeList ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke' }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px' }} className=\"img-fluid\" src={this.state.heroeList[this.numAleatorio()].images.md} />}\n                        >\n                            <Meta title=\"\" description=\"\" />\n                            <Button className=\"ml-5 \" outline>{this.state.heroeList[this.numAleatorio()].name}</Button>\n                            <Button className=\"ml-5 \" outline>Nome 1</Button>\n                            <Button className=\"ml-5 \" outline>Nome 1</Button>\n                        </Card> : ''}\n                    </Col>\n                    {/* Coluna de cards/tempo Restante}*/}\n                    <Col xl={{ size: 4 }}>\n\n                    </Col>\n\n                </Row>\n                {/*    {this.state.heroeList ? <Card\n                    hoverable\n                    style={{ width: 240 }}\n                    cover={<img alt=\"example\" className=\"img-fluid\" src= {this.state.heroeList[this.numAleatorio()].images.md } />}\n                >\n                    <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n                </Card> : ''} */}\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}