{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heroList: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json\").then(res => (console.log('obtive como resposta ', res), this.setState({\n      heroList: res.data\n    }))).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","GameScreen","constructor","props","state","heroList","componentDidMount","get","then","res","console","log","setState","data","catch","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,KAAK,CAACO,GAAN,CAAU,gEAAV,EACKC,IADL,CACUC,GAAG,KAEDC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC,GACA,KAAKG,QAAL,CAAc;AACVP,MAAAA,QAAQ,EAAEI,GAAG,CAACI;AADJ,KAAd,CAHC,CADb,EAQMC,KARN,CAQYC,KAAK,IAAIC,KAAK,CAAC,wCAAyCD,KAA1C,CAR1B;AASH;;AAGDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA5B8B;;AA+BnC,eAAehB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroList: null\n        }\n    }\n\n    componentDidMount() {\n        axios.get(\"https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/all.json\")    \n            .then(res => (\n                (\n                    console.log('obtive como resposta ', res),\n                    this.setState({\n                        heroList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' +  error))\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}