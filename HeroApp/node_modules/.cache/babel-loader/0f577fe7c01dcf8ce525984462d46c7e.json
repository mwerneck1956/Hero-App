{"ast":null,"code":"import _classCallCheck from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import api from'../services/api';import axios from'axios';//Components\nimport DialogStatistics from'./DialogStatistics';//Reacstrap\nimport{Button,Spinner}from'reactstrap';//Ant design\nimport{Card,Row,Col}from'antd';//Styled Components \nimport{Item,SubItem,DivCard}from'../styles/syles';//MAterial Ui\nimport{Grid}from'@material-ui/core';import{Snackbar}from'@material-ui/core';import MuiAlert from'@material-ui/lab/Alert';//Material Ui Icons\nimport CheckIcon from\"@material-ui/icons/Check\";import ErrorIcon from\"@material-ui/icons/Error\";var Meta=Card.Meta;var buttons;var numCards=4;var Snack={message:'',color:'',icon:null};var GameScreen=/*#__PURE__*/function(_Component){_inherits(GameScreen,_Component);function GameScreen(props){var _this;_classCallCheck(this,GameScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameScreen).call(this,props));_this.numAleatorio=function(range){return Math.floor(Math.random()*range);//Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n};_this.verifyName=function(e){//Se o botão foi clickado Adiciono 1 a meus cards visitado\n_this.state.numCards=_this.state.numCards+1;if(_this.state.numCards!==numCards){if(_this.state.pickedHeroe.name===e.target.value){Snack.message=\"Você Acertou!\";Snack.color=\"success\";Snack.icon=CheckIcon;_this.setState({points:_this.state.points+20,sucessesses:_this.state.sucessesses+1});}else{Snack.message=\"Você errou!\";Snack.color=\"warning\";Snack.icon=ErrorIcon;_this.setState({errors:_this.state.errors+1});}_this.setState({heroLoaded:false,pickedHeroe:null});_this.loadingSnackBar(Snack);}else{if(_this.state.sucessesses>_this.state.errors){_this.setState({openStatistics:true,win:true});}else{_this.setState({openStatistics:true,win:false});}}};_this.selectHeroes=function(){var numSorteado=_this.numAleatorio(_this.state.heroeList.length);var heroiSorteado=_this.state.heroeList[numSorteado];//Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n_this.state.heroeList.splice(numSorteado,1);//Deletei o heroi do meu vetor de herois\nreturn heroiSorteado;};_this.state={win:false,errorsPercentage:null,sucessessesPercentage:null,openStatistics:false,snackBarColor:'',snackBarMessage:'',snackbarIcon:null,snackBarOpen:false,numCards:0,//Contar quantos numeros de cards ja foram exibidos\nheroLoaded:false,//Controlar se o heroi esta carregado ou não \nheroeList:null,//Lista contendo todos os herois recebidos da api\nVisitedHeroes:[],//Vetor com os herois ja visitados para evitir duplicatas\nActualHeroes:[],//\npickedHeroe:null,points:0,sucessesses:0,errors:0,maxHeroes:5,choices:0};return _this;}_createClass(GameScreen,[{key:\"Alert\",value:function Alert(props){return React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}},{key:\"loadingSnackBar\",value:function loadingSnackBar(snack){//Função para carregar a snack bar falando se usuario errou ou acertou o héroi\nthis.setState({snackBarColor:snack.color,snackBarMessage:snack.message,snackbarIcon:snack.icon,snackBarOpen:true});setTimeout(function(){this.setState({snackBarOpen:false});}.bind(this),1500);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;api.get(\"/all.json\").then(function(res){return _this2.setState({heroeList:res.data});}).catch(function(error){return alert('erro de comunicação com o servidor '+error);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){if(prevState.ActualHeroes!==this.state.ActualHeroes&&this.state.heroeList!==null){var actualHeros=this.selectHeroes();}}},{key:\"render\",value:function render(){var _this3=this;if(this.state.heroeList!==null&&this.state.heroLoaded===false){this.state.ActualHeroes=[];var pickedHero=this.selectHeroes();// Pego o heroi escolhido atraves da funcão auxiliar\nthis.setState({pickedHeroe:pickedHero,heroLoaded:true});var random=this.numAleatorio(3);//Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\nfor(var i=0;i<3;i++){if(i===random){this.state.ActualHeroes.push(pickedHero);}else{this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)]);}}}return React.createElement(\"div\",{style:{backgroundColor:'whitesmoke',height:\"100%\"}},React.createElement(DialogStatistics,{open:this.state.openStatistics,won:this.state.win,errors:this.state.errosPercentage,sucessess:this.state.sucessessesPercentage,points:this.state.points}),React.createElement(Grid,{container:true,justify:\"space-around\"},React.createElement(Grid,{item:true,xl:4,xs:\"auto\"},React.createElement(\"div\",{className:\"offset-xl-2\"},React.createElement(Item,null,\" Pontuacao : \",this.state.points,\" \"),React.createElement(SubItem,null,\"Acertos : \",this.state.sucessesses,React.createElement(\"br\",null),\"Errors : \",this.state.errors))),React.createElement(Grid,{item:true,className:\"mt-3 mb-2\",xl:4,xs:8},React.createElement(DivCard,null,this.state.pickedHeroe?React.createElement(Card,{hoverable:true,style:{width:300,backgroundColor:'whitesmoke',marginTop:\"5%\"},cover:React.createElement(\"img\",{alt:\"example\",style:{width:'350px',borderRadius:'15px 15px 15px 15px'},className:\"img-fluid\",src:this.state.pickedHeroe.images.sm})},React.createElement(Meta,{title:\"\",description:\"\"}),React.createElement(Grid,{container:true,direction:\"column\",justify:\"center\",alignItems:\"center\"},this.state.ActualHeroes?this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Grid,{fluid:true},React.createElement(Button,{className:\"mt-1\",onClick:_this3.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \"),React.createElement(\"br\",null));}):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}}))):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}}))),React.createElement(Grid,{className:\"mt-5\",item:true,xl:4},React.createElement(\"div\",{className:\"offset-xl-5\"},React.createElement(SubItem,null,\"Tempo Restante :\"),React.createElement(SubItem,null,\"Cards Restantes : \",numCards-this.state.numCards)))),React.createElement(Snackbar,{place:\"bc\",open:this.state.snackBarOpen,closeNotification:function closeNotification(){return _this3.setState({snackBarOpen:false});},close:true},React.createElement(MuiAlert,{elevation:6,variant:\"filled\",severity:this.state.snackBarColor},this.state.snackBarMessage)));}}]);return GameScreen;}(Component);export default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","DialogStatistics","Button","Spinner","Card","Row","Col","Item","SubItem","DivCard","Grid","Snackbar","MuiAlert","CheckIcon","ErrorIcon","Meta","buttons","numCards","Snack","message","color","icon","GameScreen","props","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","setState","points","sucessesses","errors","heroLoaded","loadingSnackBar","openStatistics","win","selectHeroes","numSorteado","heroeList","length","heroiSorteado","splice","errorsPercentage","sucessessesPercentage","snackBarColor","snackBarMessage","snackbarIcon","snackBarOpen","VisitedHeroes","ActualHeroes","maxHeroes","choices","snack","setTimeout","bind","get","then","res","data","catch","error","alert","prevState","actualHeros","pickedHero","i","push","backgroundColor","height","errosPercentage","width","marginTop","borderRadius","images","sm","map","heroSelected","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Components\nimport DialogStatistics from './DialogStatistics'\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem, DivCard } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\nimport { Snackbar } from '@material-ui/core';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n//Material Ui Icons\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 4;\n\nconst Snack = {\n    message: '',\n    color: '',\n    icon: null\n}\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            win : false ,\n            errorsPercentage : null ,\n            sucessessesPercentage : null ,\n            openStatistics : false,\n            snackBarColor: '',\n            snackBarMessage: '',\n            snackbarIcon: null,\n            snackBarOpen: false,\n            numCards: 0, //Contar quantos numeros de cards ja foram exibidos\n            heroLoaded: false, //Controlar se o heroi esta carregado ou não \n            heroeList: null, //Lista contendo todos os herois recebidos da api\n            VisitedHeroes: [], //Vetor com os herois ja visitados para evitir duplicatas\n            ActualHeroes: [], //\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    loadingSnackBar(snack) { //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n        this.setState({\n            snackBarColor: snack.color,\n            snackBarMessage: snack.message,\n            snackbarIcon: snack.icon,\n            snackBarOpen: true\n        });\n        setTimeout(\n            function () {\n                this.setState({ snackBarOpen: false });\n            }.bind(this),\n            1500\n        );\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n\n        }\n    }\n\n    verifyName = (e) => {\n\n        //Se o botão foi clickado Adiciono 1 a meus cards visitado\n        this.state.numCards = this.state.numCards + 1\n        if (this.state.numCards !== numCards) {\n            if (this.state.pickedHeroe.name === e.target.value) {\n                Snack.message = \"Você Acertou!\"\n                Snack.color = \"success\"\n                Snack.icon = CheckIcon\n\n                this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n            } else {\n                Snack.message = \"Você errou!\"\n                Snack.color = \"warning\"\n                Snack.icon = ErrorIcon\n\n                this.setState({ errors: this.state.errors + 1 })\n\n            }\n            this.setState({ heroLoaded: false, pickedHeroe: null })\n            this.loadingSnackBar(Snack)\n        }else{\n            if(this.state.sucessesses > this.state.errors){\n                this.setState({openStatistics : true , win : true}  )\n            }else{\n                this.setState({openStatistics : true , win : false}  )\n            }\n        \n        }\n    }\n    selectHeroes = () => {\n\n        let numSorteado = this.numAleatorio(this.state.heroeList.length)\n        let heroiSorteado = this.state.heroeList[numSorteado] //Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n        this.state.heroeList.splice(numSorteado, 1) //Deletei o heroi do meu vetor de herois\n\n        return heroiSorteado\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n\n            let pickedHero = this.selectHeroes() // Pego o heroi escolhido atraves da funcão auxiliar\n\n            this.setState({ pickedHeroe: pickedHero, heroLoaded: true })\n\n\n\n            let random = this.numAleatorio(3) //Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\n            for (var i = 0; i < 3; i++) {\n                if (i === random) {\n                    this.state.ActualHeroes.push(pickedHero)\n                } else {\n                    this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)])\n                }\n            }\n        }\n        return (\n           \n            <div style={{ backgroundColor: 'whitesmoke', height: \"100%\" }}>\n                 <DialogStatistics \n                    open= {this.state.openStatistics} \n                    won = {this.state.win} \n                    errors ={this.state.errosPercentage} \n                    sucessess = {this.state.sucessessesPercentage}  points={this.state.points} />\n                <Grid\n\n                    container\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4}\n                        xs=\"auto\"\n\n                    >\n                        <div className=\"offset-xl-2\">\n                            <Item> Pontuacao : {this.state.points} </Item>\n\n                            <SubItem>\n\n                                Acertos : {this.state.sucessesses}\n                                <br />\n                                Errors : {this.state.errors}\n\n                            </SubItem>\n                        </div>\n\n                    </Grid>\n                    <Grid item\n                        className=\"mt-3 mb-2\"\n                        xl={4}\n                        xs={8}\n                    >\n                        <DivCard>\n                            {this.state.pickedHeroe ? <Card\n                                hoverable\n                                style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                                cover={<img alt=\"example\" style={{ width: '350px', borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.sm} />}\n                            >\n\n                                <Meta title=\"\" description=\"\" />\n                                <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"center\">\n                                    {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                        <Grid\n                                            fluid\n                                        >\n                                            <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                            <br />\n                                        </Grid>\n\n                                    )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                                </Grid>\n\n                            </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                            }\n                        </DivCard>\n\n                    </Grid>\n                    <Grid\n                        className=\"mt-5\"\n                        item xl={4}\n                    >\n                        <div className=\"offset-xl-5\">\n                            <SubItem>\n                                Tempo Restante :\n                            </SubItem>\n                            <SubItem>\n                                Cards Restantes : {numCards - this.state.numCards}\n                            </SubItem>\n                        </div>\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    place=\"bc\"\n                    open={this.state.snackBarOpen}\n                    closeNotification={() => this.setState({ snackBarOpen: false })}\n                    close\n                >\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.snackBarColor}>\n                        {this.state.snackBarMessage}\n                    </MuiAlert>\n\n                </Snackbar>\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}