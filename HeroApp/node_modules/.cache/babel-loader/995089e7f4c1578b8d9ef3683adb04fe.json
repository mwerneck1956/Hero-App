{"ast":null,"code":"import _classCallCheck from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import api from'../services/api';import axios from'axios';//Reacstrap\nimport{Button,Spinner}from'reactstrap';//Ant design\nimport{Card,Row,Col}from'antd';//Styled Components \nimport{Item,SubItem}from'../styles/syles';//MAterial Ui\nimport{Grid}from'@material-ui/core';var Meta=Card.Meta;var buttons;var numCards=5;var GameScreen=/*#__PURE__*/function(_Component){_inherits(GameScreen,_Component);function GameScreen(props){var _this;_classCallCheck(this,GameScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameScreen).call(this,props));_this.numAleatorio=function(range){return Math.floor(Math.random()*range);//Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n};_this.verifyName=function(e){if(_this.state.pickedHeroe.name===e.target.value){alert('parabens voce acertou');_this.setState({points:_this.state.points+20,sucessesses:_this.state.sucessesses+1});}else{_this.setState({errors:_this.state.errors+1});alert('Eroooooou!');}_this.setState({heroLoaded:false,pickedHeroe:null});};_this.selectHeroes=function(){var vetHerois=[],pickedHero;var numSorteado=_this.numAleatorio(500);var i=0;while(i<3){if(i===0){pickedHero=_this.state.heroeList[numSorteado];}vetHerois.push(_this.state.heroeList[numSorteado]);numSorteado=_this.numAleatorio(500);i++;}return vetHerois;};_this.state={heroLoaded:false,heroeList:null,VisitedHeroes:[],ActualHeroes:[],pickedHeroe:null,points:0,sucessesses:0,errors:0,maxHeroes:5,choices:0};return _this;}_createClass(GameScreen,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;api.get(\"/all.json\").then(function(res){return _this2.setState({heroeList:res.data});}).catch(function(error){return alert('erro de comunicação com o servidor '+error);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){var _this3=this;if(prevState.ActualHeroes!==this.state.ActualHeroes&&this.state.heroeList!==null){var actualHeros=this.selectHeroes();buttons=this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Button,{onClick:_this3.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \");});}}},{key:\"render\",value:function render(){var _this4=this;if(this.state.heroeList!==null&&this.state.heroLoaded===false){this.state.ActualHeroes=[];var heroes=this.selectHeroes();heroes.map(function(hero){return _this4.state.ActualHeroes.push(hero);});this.state.ActualHeroes.concat(this.selectHeroes());if(this.state.ActualHeroes!==null){var indiceEscolhido=this.numAleatorio(this.state.ActualHeroes.length);//Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n// para  posteriormente deletar o heroi da minha lista de herois\nthis.setState({pickedHeroe:this.state.ActualHeroes[indiceEscolhido],heroLoaded:true});//Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\nif(this.state.pickedHeroe){this.state.heroeList.splice(indiceEscolhido,1);console.log('heroe lsit perdeu 1',this.state.heroeList);}}console.log('vetor de herois ',this.state.heroeList);console.log('pickado ',this.state.pickedHeroe);}return React.createElement(\"div\",null,React.createElement(Grid,{style:{backgroundColor:'whitesmoke'},container:true,spacing:1,justify:\"space-around\"},React.createElement(Grid,{item:true,xl:4},React.createElement(Item,null,\" Pontuacao : \",this.state.points,\" \"),React.createElement(SubItem,null,\"Acertos : \",this.state.sucessesses,React.createElement(\"br\",null),\"Errors : \",this.state.errors)),React.createElement(Grid,{item:true,xl:6},this.state.pickedHeroe?React.createElement(Card,{hoverable:true,style:{width:300,backgroundColor:'whitesmoke',marginTop:\"5%\"},cover:React.createElement(\"img\",{alt:\"example\",style:{borderRadius:'15px 15px 15px 15px'},className:\"img-fluid\",src:this.state.pickedHeroe.images.md})},React.createElement(Meta,{title:\"\",description:\"\"}),React.createElement(Grid,{container:true,direction:\"column\",justify:\"center\",alignItems:\"center\"},this.state.ActualHeroes?this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Grid,{fluid:true},React.createElement(Button,{className:\"mt-1\",onClick:_this4.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \"),React.createElement(\"br\",null));}):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}}))):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}})),React.createElement(Grid,{item:true,xl:2})));}}]);return GameScreen;}(Component);export default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Button","Spinner","Card","Row","Col","Item","SubItem","Grid","Meta","buttons","numCards","GameScreen","props","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","alert","setState","points","sucessesses","errors","heroLoaded","selectHeroes","vetHerois","pickedHero","numSorteado","i","heroeList","push","VisitedHeroes","ActualHeroes","maxHeroes","choices","get","then","res","data","catch","error","prevState","actualHeros","map","heroSelected","heroes","hero","concat","indiceEscolhido","length","splice","console","log","backgroundColor","width","marginTop","borderRadius","images","md","marginLeft","height"],"mappings":"o3BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA;AACA,OAASC,MAAT,CAAiBC,OAAjB,KAAgC,YAAhC,CAGA;AACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,KAA+B,MAA/B,CAEA;AACA,OAASC,IAAT,CAAeC,OAAf,KAA8B,iBAA9B,CAEA;AACA,OAASC,IAAT,KAAqB,mBAArB,C,GAKQC,CAAAA,I,CAASN,I,CAATM,I,CAER,GAAIC,CAAAA,OAAJ,CACA,GAAMC,CAAAA,QAAQ,CAAG,CAAjB,C,GAGMC,CAAAA,U,oEACF,oBAAYC,KAAZ,CAAmB,4CACf,4EAAMA,KAAN,GADe,MAkBnBC,YAlBmB,CAkBJ,SAACC,KAAD,CAAW,CACtB,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBH,KAA3B,CAAP,CAAyC;AAC5C,CApBkB,OA0CnBI,UA1CmB,CA0CN,SAACC,CAAD,CAAO,CAEhB,GAAI,MAAKC,KAAL,CAAWC,WAAX,CAAuBC,IAAvB,GAAgCH,CAAC,CAACI,MAAF,CAASC,KAA7C,CAAoD,CAChDC,KAAK,CAAC,uBAAD,CAAL,CACA,MAAKC,QAAL,CAAc,CAAEC,MAAM,CAAE,MAAKP,KAAL,CAAWO,MAAX,CAAoB,EAA9B,CAAkCC,WAAW,CAAE,MAAKR,KAAL,CAAWQ,WAAX,CAAyB,CAAxE,CAAd,EACH,CAHD,IAGO,CACH,MAAKF,QAAL,CAAc,CAAEG,MAAM,CAAE,MAAKT,KAAL,CAAWS,MAAX,CAAoB,CAA9B,CAAd,EACAJ,KAAK,CAAC,YAAD,CAAL,CACH,CACD,MAAKC,QAAL,CAAc,CAAEI,UAAU,CAAE,KAAd,CAAsBT,WAAW,CAAG,IAApC,CAAd,EACH,CApDkB,OAqDnBU,YArDmB,CAqDJ,UAAM,CACjB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAAoBC,UAApB,CACA,GAAIC,CAAAA,WAAW,CAAG,MAAKrB,YAAL,CAAkB,GAAlB,CAAlB,CACA,GAAIsB,CAAAA,CAAC,CAAG,CAAR,CACA,MAAOA,CAAC,CAAG,CAAX,CAAc,CACV,GAAIA,CAAC,GAAK,CAAV,CAAa,CACTF,UAAU,CAAG,MAAKb,KAAL,CAAWgB,SAAX,CAAqBF,WAArB,CAAb,CACH,CAEDF,SAAS,CAACK,IAAV,CAAe,MAAKjB,KAAL,CAAWgB,SAAX,CAAqBF,WAArB,CAAf,EACAA,WAAW,CAAG,MAAKrB,YAAL,CAAkB,GAAlB,CAAd,CACAsB,CAAC,GACJ,CAGD,MAAOH,CAAAA,SAAP,CACH,CArEkB,CAGf,MAAKZ,KAAL,CAAa,CACTU,UAAU,CAAE,KADH,CAETM,SAAS,CAAE,IAFF,CAGTE,aAAa,CAAE,EAHN,CAITC,YAAY,CAAE,EAJL,CAKTlB,WAAW,CAAE,IALJ,CAMTM,MAAM,CAAE,CANC,CAOTC,WAAW,CAAE,CAPJ,CAQTC,MAAM,CAAE,CARC,CASTW,SAAS,CAAE,CATF,CAUTC,OAAO,CAAE,CAVA,CAAb,CAHe,aAgBlB,C,oFAMmB,iBAChB3C,GAAG,CAAC4C,GAAJ,CAAQ,WAAR,EACKC,IADL,CACU,SAAAC,GAAG,QAED,CAAA,MAAI,CAAClB,QAAL,CAAc,CACVU,SAAS,CAAEQ,GAAG,CAACC,IADL,CAAd,CAFC,EADb,EAOMC,KAPN,CAOY,SAAAC,KAAK,QAAItB,CAAAA,KAAK,CAAC,sCAAwCsB,KAAzC,CAAT,EAPjB,EAQH,C,8DACkBC,S,CAAW,iBAE1B,GAAIA,SAAS,CAACT,YAAV,GAA2B,KAAKnB,KAAL,CAAWmB,YAAtC,EAAsD,KAAKnB,KAAL,CAAWgB,SAAX,GAAyB,IAAnF,CAAyF,CACrF,GAAIa,CAAAA,WAAW,CAAG,KAAKlB,YAAL,EAAlB,CACAtB,OAAO,CAAG,KAAKW,KAAL,CAAWmB,YAAX,CAAwBW,GAAxB,CAA4B,SAAAC,YAAY,QAC9C,qBAAC,MAAD,EAAQ,OAAO,CAAE,MAAI,CAACjC,UAAtB,CAAkC,KAAK,CAAEiC,YAAY,CAAC7B,IAAtD,CAA4D,OAAO,KAAnE,CAAoE,KAAK,CAAC,SAA1E,EAAqF6B,YAAY,CAAC7B,IAAlG,KAD8C,EAAxC,CAAV,CAGH,CACJ,C,uCA+BQ,iBAEL,GAAI,KAAKF,KAAL,CAAWgB,SAAX,GAAyB,IAAzB,EAAiC,KAAKhB,KAAL,CAAWU,UAAX,GAA0B,KAA/D,CAAsE,CAClE,KAAKV,KAAL,CAAWmB,YAAX,CAA0B,EAA1B,CACA,GAAIa,CAAAA,MAAM,CAAG,KAAKrB,YAAL,EAAb,CACAqB,MAAM,CAACF,GAAP,CAAW,SAAAG,IAAI,QACX,CAAA,MAAI,CAACjC,KAAL,CAAWmB,YAAX,CAAwBF,IAAxB,CAA6BgB,IAA7B,CADW,EAAf,EAGA,KAAKjC,KAAL,CAAWmB,YAAX,CAAwBe,MAAxB,CAA+B,KAAKvB,YAAL,EAA/B,EAGA,GAAI,KAAKX,KAAL,CAAWmB,YAAX,GAA4B,IAAhC,CAAsC,CAClC,GAAIgB,CAAAA,eAAe,CAAG,KAAK1C,YAAL,CAAkB,KAAKO,KAAL,CAAWmB,YAAX,CAAwBiB,MAA1C,CAAtB,CAAwE;AACxE;AACA,KAAK9B,QAAL,CAAc,CAAEL,WAAW,CAAE,KAAKD,KAAL,CAAWmB,YAAX,CAAwBgB,eAAxB,CAAf,CAAyDzB,UAAU,CAAE,IAArE,CAAd,EAEA;AACA,GAAI,KAAKV,KAAL,CAAWC,WAAf,CAA4B,CACxB,KAAKD,KAAL,CAAWgB,SAAX,CAAqBqB,MAArB,CAA4BF,eAA5B,CAA6C,CAA7C,EACAG,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,KAAKvC,KAAL,CAAWgB,SAA9C,EACH,CAGJ,CACDsB,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgC,KAAKvC,KAAL,CAAWgB,SAA3C,EACAsB,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwB,KAAKvC,KAAL,CAAWC,WAAnC,EACH,CACD,MACI,gCACI,oBAAC,IAAD,EACI,KAAK,CAAE,CAAEuC,eAAe,CAAE,YAAnB,CADX,CAEI,SAAS,KAFb,CAEc,OAAO,CAAE,CAFvB,CAGI,OAAO,CAAC,cAHZ,EAMI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EAGI,oBAAC,IAAD,sBAAoB,KAAKxC,KAAL,CAAWO,MAA/B,KAHJ,CAOI,oBAAC,OAAD,mBAEe,KAAKP,KAAL,CAAWQ,WAF1B,CAGI,8BAHJ,aAIc,KAAKR,KAAL,CAAWS,MAJzB,CAPJ,CANJ,CAuBI,oBAAC,IAAD,EAAM,IAAI,KAAV,CACI,EAAE,CAAE,CADR,EAEK,KAAKT,KAAL,CAAWC,WAAX,CAAyB,oBAAC,IAAD,EACtB,SAAS,KADa,CAEtB,KAAK,CAAE,CAAEwC,KAAK,CAAE,GAAT,CAAcD,eAAe,CAAE,YAA/B,CAA6CE,SAAS,CAAE,IAAxD,CAFe,CAGtB,KAAK,CAAE,2BAAK,GAAG,CAAC,SAAT,CAAmB,KAAK,CAAE,CAAEC,YAAY,CAAE,qBAAhB,CAA1B,CAAmE,SAAS,CAAC,WAA7E,CAAyF,GAAG,CAAE,KAAK3C,KAAL,CAAWC,WAAX,CAAuB2C,MAAvB,CAA8BC,EAA5H,EAHe,EAMtB,oBAAC,IAAD,EAAM,KAAK,CAAC,EAAZ,CAAe,WAAW,CAAC,EAA3B,EANsB,CAOtB,oBAAC,IAAD,EACI,SAAS,KADb,CAEI,SAAS,CAAC,QAFd,CAGI,OAAO,CAAC,QAHZ,CAII,UAAU,CAAC,QAJf,EAKK,KAAK7C,KAAL,CAAWmB,YAAX,CAA0B,KAAKnB,KAAL,CAAWmB,YAAX,CAAwBW,GAAxB,CAA4B,SAAAC,YAAY,QAC/D,qBAAC,IAAD,EACI,KAAK,KADT,EAGI,oBAAC,MAAD,EAAQ,SAAS,CAAC,MAAlB,CAAyB,OAAO,CAAE,MAAI,CAACjC,UAAvC,CAAmD,KAAK,CAAEiC,YAAY,CAAC7B,IAAvE,CAA6E,OAAO,KAApF,CAAqF,KAAK,CAAC,SAA3F,EAAsG6B,YAAY,CAAC7B,IAAnH,KAHJ,CAII,8BAJJ,CAD+D,EAAxC,CAA1B,CAQI,oBAAC,OAAD,EAAS,KAAK,CAAE,CAAE4C,UAAU,CAAE,KAAd,CAAqBJ,SAAS,CAAE,KAAhC,CAAuCD,KAAK,CAAE,MAA9C,CAAsDM,MAAM,CAAE,MAA9D,CAAhB,EAbT,CAPsB,CAAzB,CAuBS,oBAAC,OAAD,EAAS,KAAK,CAAE,CAAED,UAAU,CAAE,KAAd,CAAqBJ,SAAS,CAAE,KAAhC,CAAuCD,KAAK,CAAE,MAA9C,CAAsDM,MAAM,CAAE,MAA9D,CAAhB,EAzBd,CAvBJ,CAoDI,oBAAC,IAAD,EACI,IAAI,KADR,CACS,EAAE,CAAE,CADb,EApDJ,CADJ,CADJ,CAgEH,C,wBAnKoBtE,S,EAsKzB,cAAec,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\n\n\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 5;\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroLoaded: false,\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n            buttons = this.state.ActualHeroes.map(heroSelected => (\n                <Button onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n            ))\n        }\n    }\n\n    verifyName = (e) => {\n\n        if (this.state.pickedHeroe.name === e.target.value) {\n            alert('parabens voce acertou')\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            this.setState({ errors: this.state.errors + 1 })\n            alert('Eroooooou!')\n        }\n        this.setState({ heroLoaded: false , pickedHeroe : null })\n    }\n    selectHeroes = () => {\n        let vetHerois = [], pickedHero\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if (i === 0) {\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n           \n            vetHerois.push(this.state.heroeList[numSorteado])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n\n   \n        return vetHerois\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n            let heroes = this.selectHeroes()\n            heroes.map(hero => (\n                this.state.ActualHeroes.push(hero)\n            ))\n            this.state.ActualHeroes.concat(this.selectHeroes())\n\n\n            if (this.state.ActualHeroes !== null) {\n                var indiceEscolhido = this.numAleatorio(this.state.ActualHeroes.length) //Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n                // para  posteriormente deletar o heroi da minha lista de herois\n                this.setState({ pickedHeroe: this.state.ActualHeroes[indiceEscolhido], heroLoaded: true })\n\n                //Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\n                if (this.state.pickedHeroe) {\n                    this.state.heroeList.splice(indiceEscolhido, 1)\n                    console.log('heroe lsit perdeu 1', this.state.heroeList)\n                }\n\n\n            }\n            console.log('vetor de herois ', this.state.heroeList)\n            console.log('pickado ', this.state.pickedHeroe)\n        }\n        return (\n            <div>\n                <Grid\n                    style={{ backgroundColor: 'whitesmoke' }}\n                    container spacing={1}\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4}\n\n                    >\n                        <Item> Pontuacao : {this.state.points} </Item>\n\n                       \n\n                        <SubItem>\n                            \n                            Acertos : {this.state.sucessesses}\n                            <br/>\n                            Errors : {this.state.errors}\n\n                        </SubItem>\n\n\n                    </Grid>\n                    <Grid item\n                        xl={6}>\n                        {this.state.pickedHeroe ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.md} />}\n                        >\n\n                            <Meta title=\"\" description=\"\" />\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                    <Grid\n                                        fluid\n                                    >\n                                        <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                        <br />\n                                    </Grid>\n\n                                )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                            </Grid>\n\n                        </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                        }\n                    </Grid>\n                    <Grid\n                        item xl={2}\n                    >\n\n                    </Grid>\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}