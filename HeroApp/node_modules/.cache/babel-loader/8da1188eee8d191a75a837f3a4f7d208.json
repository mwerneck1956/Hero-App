{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\nimport { Row, Col, Button } from 'reactstrap';\nimport { Card } from 'antd';\nconst {\n  Meta\n} = Card;\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numAleatorio = range => {\n      return Math.floor(Math.random() * range); //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    };\n\n    this.selectHeroes = () => {\n      let vetHerois = [],\n          pickedHero;\n      console.log('selecionei herois');\n      let numSorteado = this.numAleatorio(500);\n      var i = 0;\n\n      while (i < 3) {\n        if (i === 0) {\n          pickedHero = this.state.heroeList[numSorteado];\n        } //this.setState(VisitedHeroes.push(this.state.heroeList[numSorteado]) )\n\n\n        vetHerois.push(this.state.heroeList[numSorteado]);\n        numSorteado = this.numAleatorio(500);\n        i++;\n      } //this.setState({pickedHeroe : pickedHero , ActualHeroes : vetHerois})\n      //console.log('vetor de herois' + vetHerois + 'visitados ' , this.state.VisitedHeroes)\n\n\n      console.log('heroi selecionado ', vetHerois);\n      return vetHerois;\n    };\n\n    this.state = {\n      heroLoaded: false,\n      heroeList: null,\n      VisitedHeroes: [],\n      ActualHeroes: [],\n      pickedHeroe: null\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n      let actualHeros = this.selectHeroes();\n    }\n  }\n\n  render() {\n    if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n      console.log('retorno da func ', this.selectHeroes());\n      this.setState({\n        heroLoaded: true,\n        ActualHeros: [...this.selectHeroes()]\n      });\n\n      if (this.state.ActualHeroes !== null) {\n        console.log(this.state.ActualHeroes);\n        this.setState({\n          pickedHeroe: this.state.ActualHeroes[this.numAleatorio(this.state.ActualHeroes.length)]\n        });\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      xl: {\n        size: 4,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xl: {\n        size: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.heroeList ? React.createElement(Card, {\n      hoverable: true,\n      style: {\n        width: 300,\n        backgroundColor: 'whitesmoke'\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          borderRadius: '15px'\n        },\n        className: \"img-fluid\",\n        src: this.state.heroeList[10].images.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\",\n      description: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.heroeList[10].name), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Nome 1\"), React.createElement(Button, {\n      className: \"ml-5 \",\n      outline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Nome 1\")) : ''), React.createElement(Col, {\n      xl: {\n        size: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Row","Col","Button","Card","Meta","GameScreen","constructor","props","numAleatorio","range","Math","floor","random","selectHeroes","vetHerois","pickedHero","console","log","numSorteado","i","state","heroeList","push","heroLoaded","VisitedHeroes","ActualHeroes","pickedHeroe","componentDidMount","get","then","res","setState","data","catch","error","alert","componentDidUpdate","prevState","actualHeros","render","ActualHeros","length","size","offset","width","backgroundColor","borderRadius","images","md","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\nimport { Row, Col, Button } from 'reactstrap'\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroLoaded : false,\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null\n        }\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n        if(prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList!==null){\n            let actualHeros = this.selectHeroes()\n        }\n    }\n    selectHeroes = () => {\n        let vetHerois = [] , pickedHero \n        console.log('selecionei herois')\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if(i === 0){\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n            //this.setState(VisitedHeroes.push(this.state.heroeList[numSorteado]) )\n            vetHerois.push(this.state.heroeList[numSorteado ])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n        //this.setState({pickedHeroe : pickedHero , ActualHeroes : vetHerois})\n        //console.log('vetor de herois' + vetHerois + 'visitados ' , this.state.VisitedHeroes)\n        console.log('heroi selecionado ' , vetHerois)\n    \n       return vetHerois\n    }\n    render() {\n        \n        if(this.state.heroeList!==null && this.state.heroLoaded === false){\n          \n            console.log( 'retorno da func ' , this.selectHeroes())\n            this.setState({heroLoaded : true ,ActualHeros : [...this.selectHeroes()] })\n          \n            if(this.state.ActualHeroes !== null){\n                console.log(this.state.ActualHeroes)\n                this.setState({pickedHeroe : this.state.ActualHeroes[this.numAleatorio(this.state.ActualHeroes.length)]})\n            }\n        }\n        return (\n            <div>\n                <Row>\n                    {/*Coluna das pontuações , acertos e erros*/}\n                    <Col xs={12} sm={12} xl={{ size: 4, offset: 1 }}>\n\n                    </Col>\n                    {/*Coluna das cards */}\n                    <Col xl={{ size: 5 }}>\n                        {this.state.heroeList ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke' }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px' }} className=\"img-fluid\" src={this.state.heroeList[10].images.md} />}\n                        >\n                            <Meta title=\"\" description=\"\" />\n                            <Button className=\"ml-5 \" outline>{this.state.heroeList[10].name}</Button>\n                            <Button className=\"ml-5 \" outline>Nome 1</Button>\n                            <Button className=\"ml-5 \" outline>Nome 1</Button>\n                        </Card> : ''}\n                    </Col>\n                    {/* Coluna de cards/tempo Restante}*/}\n                    <Col xl={{ size: 4 }}>\n\n                    </Col>\n\n                </Row>\n                {/*    {this.state.heroeList ? <Card\n                    hoverable\n                    style={{ width: 240 }}\n                    cover={<img alt=\"example\" className=\"img-fluid\" src= {this.state.heroeList[this.numAleatorio()].images.md } />}\n                >\n                    <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n                </Card> : ''} */}\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}