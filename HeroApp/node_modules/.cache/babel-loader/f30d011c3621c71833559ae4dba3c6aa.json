{"ast":null,"code":"import _classCallCheck from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import api from'../services/api';import axios from'axios';//Reacstrap\nimport{Button,Spinner}from'reactstrap';//Ant design\nimport{Card,Row,Col}from'antd';//Styled Components \nimport{Item,SubItem}from'../styles/syles';//MAterial Ui\nimport{Grid}from'@material-ui/core';import{Snackbar}from'@material-ui/core';import MuiAlert from'@material-ui/lab/Alert';//Material Ui Icons\nimport CheckIcon from\"@material-ui/icons/Check\";import ErrorIcon from\"@material-ui/icons/Error\";var Meta=Card.Meta;var buttons;var numCards=10;var GameScreen=/*#__PURE__*/function(_Component){_inherits(GameScreen,_Component);function GameScreen(props){var _this;_classCallCheck(this,GameScreen);_this=_possibleConstructorReturn(this,_getPrototypeOf(GameScreen).call(this,props));_this.numAleatorio=function(range){return Math.floor(Math.random()*range);//Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n};_this.verifyName=function(e){var Snack={message:'',color:'',icon:null};if(_this.state.pickedHeroe.name===e.target.value){Snack.message=\"Parabéns , você Acertou o nome do héroi\";Snack.color=\"success\";Snack.icon=CheckIcon;_this.setState({points:_this.state.points+20,sucessesses:_this.state.sucessesses+1});}else{Snack.message=\"Você errou o nome do héroi !!!\";Snack.color=\"warning\";Snack.icon=ErrorIcon;_this.setState({errors:_this.state.errors+1});}_this.setState({heroLoaded:false,pickedHeroe:null});_this.loadingSnackBar(Snack);};_this.selectHeroes=function(){var vetHerois=[],pickedHero;var numSorteado=_this.numAleatorio(500);var i=0;while(i<3){if(i===0){pickedHero=_this.state.heroeList[numSorteado];}vetHerois.push(_this.state.heroeList[numSorteado]);numSorteado=_this.numAleatorio(500);i++;}return vetHerois;};_this.state={snackBarColor:'',snackBarMessage:'',snackbarIcon:null,snackBarOpen:false,numCards:0,//Contar quantos numeros de cards ja foram exibidos\nheroLoaded:false,//Controlar se o heroi esta carregado ou não \nheroeList:null,//Lista contendo todos os herois recebidos da api\nVisitedHeroes:[],//Vetor com os herois ja visitados para evitir duplicatas\nActualHeroes:[],//\npickedHeroe:null,points:0,sucessesses:0,errors:0,maxHeroes:5,choices:0};return _this;}_createClass(GameScreen,[{key:\"Alert\",value:function Alert(props){return React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}},{key:\"loadingSnackBar\",value:function loadingSnackBar(snack){//Função para carregar a snack bar falando se usuario errou ou acertou o héroi\nthis.setState({snackBarColor:snack.color,snackBarMessage:snack.message,snackbarIcon:snack.icon,snackBarOpen:true});setTimeout(function(){this.setState({snackBarOpen:false});}.bind(this),1500);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;api.get(\"/all.json\").then(function(res){return _this2.setState({heroeList:res.data});}).catch(function(error){return alert('erro de comunicação com o servidor '+error);});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevState){var _this3=this;if(prevState.ActualHeroes!==this.state.ActualHeroes&&this.state.heroeList!==null){var actualHeros=this.selectHeroes();buttons=this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Button,{onClick:_this3.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \");});}}},{key:\"render\",value:function render(){var _this4=this;if(this.state.heroeList!==null&&this.state.heroLoaded===false){this.state.ActualHeroes=[];var heroes=this.selectHeroes();heroes.map(function(hero){return _this4.state.ActualHeroes.push(hero);});this.state.ActualHeroes.concat(this.selectHeroes());if(this.state.ActualHeroes!==null){var indiceEscolhido=this.numAleatorio(this.state.ActualHeroes.length);//Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n// para  posteriormente deletar o heroi da minha lista de herois\nthis.setState({pickedHeroe:this.state.ActualHeroes[indiceEscolhido],heroLoaded:true});//Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\nif(this.state.pickedHeroe){this.state.heroeList.splice(indiceEscolhido,1);console.log('heroe lsit perdeu 1',this.state.heroeList);}}console.log('vetor de herois ',this.state.heroeList);console.log('pickado ',this.state.pickedHeroe);}return React.createElement(\"div\",{style:{backgroundColor:'whitesmoke',height:\"100%\"}},React.createElement(Grid,{container:true,spacing:1,justify:\"space-around\"},React.createElement(Grid,{item:true,xl:4,xs:\"auto\",spacing:2},React.createElement(Item,null,\" Pontuacao : \",this.state.points,\" \"),React.createElement(SubItem,null,\"Acertos : \",this.state.sucessesses,React.createElement(\"br\",null),\"Errors : \",this.state.errors)),React.createElement(Grid,{item:true,className:\"mt-3 mb-2\",xl:4,xs:8,spacing:2},this.state.pickedHeroe?React.createElement(Card,{hoverable:true,style:{width:300,backgroundColor:'whitesmoke',marginTop:\"5%\"},cover:React.createElement(\"img\",{alt:\"example\",style:{borderRadius:'15px 15px 15px 15px'},className:\"img-fluid\",src:this.state.pickedHeroe.images.md})},React.createElement(Meta,{title:\"\",description:\"\"}),React.createElement(Grid,{container:true,direction:\"column\",justify:\"center\",alignItems:\"center\"},this.state.ActualHeroes?this.state.ActualHeroes.map(function(heroSelected){return React.createElement(Grid,{fluid:true},React.createElement(Button,{className:\"mt-1\",onClick:_this4.verifyName,value:heroSelected.name,outline:true,color:\"primary\"},heroSelected.name,\" \"),React.createElement(\"br\",null));}):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}}))):React.createElement(Spinner,{style:{marginLeft:\"25%\",marginTop:'25%',width:'3rem',height:'3rem'}})),React.createElement(Grid,{className:\"mt-5\",item:true,xl:2},React.createElement(SubItem,null,\"Tempo Restante :\"),React.createElement(SubItem,null,\"Cards Restantes :\"))),React.createElement(Snackbar,{place:\"bc\"//color={this.state.snackBarColor}\n//icon={this.state.snackBarIcon}\n//message={this.state.snackBarMessage}\n,open:this.state.snackBarOpen,closeNotification:function closeNotification(){return _this4.setState({snackBarOpen:false});},close:true},React.createElement(MuiAlert,{elevation:6,variant:\"filled\",severity:this.state.snackBarColor},this.state.snackBarMessage)));}}]);return GameScreen;}(Component);export default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Button","Spinner","Card","Row","Col","Item","SubItem","Grid","Snackbar","MuiAlert","CheckIcon","ErrorIcon","Meta","buttons","numCards","GameScreen","props","numAleatorio","range","Math","floor","random","verifyName","e","Snack","message","color","icon","state","pickedHeroe","name","target","value","setState","points","sucessesses","errors","heroLoaded","loadingSnackBar","selectHeroes","vetHerois","pickedHero","numSorteado","i","heroeList","push","snackBarColor","snackBarMessage","snackbarIcon","snackBarOpen","VisitedHeroes","ActualHeroes","maxHeroes","choices","snack","setTimeout","bind","get","then","res","data","catch","error","alert","prevState","actualHeros","map","heroSelected","heroes","hero","concat","indiceEscolhido","length","splice","console","log","backgroundColor","height","width","marginTop","borderRadius","images","md","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card, Row, Col } from 'antd';\n\n//Styled Components \nimport { Item, SubItem } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\nimport { Snackbar } from '@material-ui/core';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n//Material Ui Icons\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 10;\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            snackBarColor: '',\n            snackBarMessage: '',\n            snackbarIcon: null,\n            snackBarOpen: false,\n            numCards: 0, //Contar quantos numeros de cards ja foram exibidos\n            heroLoaded: false, //Controlar se o heroi esta carregado ou não \n            heroeList: null, //Lista contendo todos os herois recebidos da api\n            VisitedHeroes: [], //Vetor com os herois ja visitados para evitir duplicatas\n            ActualHeroes: [], //\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n\n    Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    loadingSnackBar(snack) { //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n        this.setState({\n            snackBarColor: snack.color,\n            snackBarMessage: snack.message,\n            snackbarIcon: snack.icon,\n            snackBarOpen: true\n        });\n        setTimeout(\n            function () {\n                this.setState({ snackBarOpen: false });\n            }.bind(this),\n            1500\n        );\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n            buttons = this.state.ActualHeroes.map(heroSelected => (\n                <Button onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n            ))\n        }\n    }\n\n    verifyName = (e) => {\n        const Snack = {\n            message : '',\n            color : '',\n            icon : null\n        }\n\n        if (this.state.pickedHeroe.name === e.target.value) {\n            Snack.message = \"Parabéns , você Acertou o nome do héroi\"\n            Snack.color = \"success\" \n            Snack.icon = CheckIcon\n\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            Snack.message = \"Você errou o nome do héroi !!!\"\n            Snack.color = \"warning\" \n            Snack.icon = ErrorIcon\n\n            this.setState({ errors: this.state.errors + 1 })\n            \n        }\n        this.setState({ heroLoaded: false, pickedHeroe: null })\n        this.loadingSnackBar(Snack)\n    }\n    selectHeroes = () => {\n        let vetHerois = [], pickedHero\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if (i === 0) {\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n\n            vetHerois.push(this.state.heroeList[numSorteado])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n\n\n        return vetHerois\n    }\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n            let heroes = this.selectHeroes()\n            heroes.map(hero => (\n                this.state.ActualHeroes.push(hero)\n            ))\n            this.state.ActualHeroes.concat(this.selectHeroes())\n\n\n            if (this.state.ActualHeroes !== null) {\n                var indiceEscolhido = this.numAleatorio(this.state.ActualHeroes.length) //Sorteio um indice para o heroi escolhido  , e guardo esse indíce\n                // para  posteriormente deletar o heroi da minha lista de herois\n                this.setState({ pickedHeroe: this.state.ActualHeroes[indiceEscolhido], heroLoaded: true })\n\n                //Logo que escolhi um heroi deleto ele da minha lista de herois para evitar duplicatas\n                if (this.state.pickedHeroe) {\n                    this.state.heroeList.splice(indiceEscolhido, 1)\n                    console.log('heroe lsit perdeu 1', this.state.heroeList)\n                }\n\n\n            }\n            console.log('vetor de herois ', this.state.heroeList)\n            console.log('pickado ', this.state.pickedHeroe)\n        }\n        return (\n            <div style={{ backgroundColor: 'whitesmoke', height: \"100%\" }}>\n                <Grid\n\n                    container spacing={1}\n                    justify=\"space-around\"\n                >\n\n                    <Grid item xl={4}\n                        xs=\"auto\"\n                        spacing={2}\n\n                    >\n                        <Item> Pontuacao : {this.state.points} </Item>\n\n                        <SubItem>\n\n                            Acertos : {this.state.sucessesses}\n                            <br />\n                            Errors : {this.state.errors}\n\n                        </SubItem>\n\n\n                    </Grid>\n                    <Grid item\n                        className=\"mt-3 mb-2\"\n                        xl={4} xs={8} spacing={2}>\n                        {this.state.pickedHeroe ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke', marginTop: \"5%\" }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.md} />}\n                        >\n\n                            <Meta title=\"\" description=\"\" />\n                            <Grid\n                                container\n                                direction=\"column\"\n                                justify=\"center\"\n                                alignItems=\"center\">\n                                {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                    <Grid\n                                        fluid\n                                    >\n                                        <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                        <br />\n                                    </Grid>\n\n                                )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                            </Grid>\n\n                        </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                        }\n                    </Grid>\n                    <Grid\n                        className=\"mt-5\"\n                        item xl={2}\n                    >\n                        <SubItem>\n                            Tempo Restante :\n                            </SubItem>\n                        <SubItem>\n                            Cards Restantes :\n                            </SubItem>\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    place=\"bc\"\n                    //color={this.state.snackBarColor}\n                    //icon={this.state.snackBarIcon}\n                    //message={this.state.snackBarMessage}\n                    open={this.state.snackBarOpen}\n                    closeNotification={() => this.setState({ snackBarOpen: false })}\n                    close\n                >\n                    <MuiAlert  elevation={6} variant=\"filled\"  severity ={this.state.snackBarColor}>\n                        {this.state.snackBarMessage}\n                    </MuiAlert>\n                    \n                </Snackbar>\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}