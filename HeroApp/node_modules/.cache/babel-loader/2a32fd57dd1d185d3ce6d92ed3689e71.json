{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios'; //Components\n\nimport DialogStatistics from './DialogStatistics'; //Reacstrap\n\nimport { Button, Spinner } from 'reactstrap'; //Ant design\n\nimport { Card } from 'antd'; //Reactstrap\n\nimport { Col, Row, Container } from 'reactstrap'; //Styled Components \n\nimport { Item, SubItem, DivCard, Panel } from '../styles/syles'; //MAterial Ui\n\nimport { Grid } from '@material-ui/core';\nimport { Snackbar } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport MuiAlert from '@material-ui/lab/Alert'; //Material Ui Icons\n\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport TimerIcon from '@material-ui/icons/Timer'; //Images\n\nimport BackgroundImage from '../images/BackgroundGameScreen.jpg';\nconst {\n  Meta\n} = Card;\nlet buttons;\nconst numCards = 10;\nconst Snack = {\n  message: '',\n  color: '',\n  icon: null\n};\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.HandleImageLoaded = () => {\n      this.setState({\n        imageLoaded: true\n      });\n    };\n\n    this.numAleatorio = range => {\n      return Math.floor(Math.random() * range); //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    };\n\n    this.verifyName = e => {\n      //Se o botão foi clickado Adiciono 1 a meus cards visitado\n      this.state.numCards = this.state.numCards + 1;\n\n      if (this.state.pickedHeroe.name === e.target.value) {\n        Snack.message = \"Você Acertou!\";\n        Snack.color = \"success\";\n        Snack.icon = CheckIcon;\n        this.setState({\n          points: this.state.points + 20,\n          sucessesses: this.state.sucessesses + 1\n        });\n      } else {\n        Snack.message = \"Você errou!\";\n        Snack.color = \"warning\";\n        Snack.icon = ErrorIcon;\n        this.setState({\n          errors: this.state.errors + 1\n        });\n      }\n\n      this.setState({\n        heroLoaded: false,\n        pickedHeroe: null,\n        imageLoaded: false\n      });\n      this.loadingSnackBar(Snack);\n\n      if (this.state.numCards === numCards) {\n        this.verifyWinner();\n      }\n    };\n\n    this.verifyWinner = () => {\n      clearInterval(this.interval);\n\n      if (this.state.sucessesses > this.state.errors) {\n        this.setState({\n          openStatistics: true,\n          win: true\n        });\n      } else {\n        this.setState({\n          openStatistics: true,\n          win: false\n        });\n      }\n    };\n\n    this.selectHeroes = () => {\n      let numSorteado = this.numAleatorio(this.state.heroeList.length);\n      let heroiSorteado = this.state.heroeList[numSorteado]; //Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n\n      this.state.heroeList.splice(numSorteado, 1); //Deletei o heroi do meu vetor de herois\n\n      return heroiSorteado;\n    };\n\n    this.updateCounter = () => {\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    };\n\n    this.state = {\n      counter: 60,\n      win: false,\n      imageLoaded: false,\n      errorsPercentage: null,\n      sucessessesPercentage: null,\n      openStatistics: false,\n      snackBarColor: '',\n      snackBarMessage: '',\n      snackbarIcon: null,\n      snackBarOpen: false,\n      numCards: 0,\n      //Contar quantos numeros de cards ja foram exibidos\n      heroLoaded: false,\n      //Controlar se o heroi esta carregado ou não \n      heroeList: null,\n      //Lista contendo todos os herois recebidos da api\n      VisitedHeroes: [],\n      //Vetor com os herois ja visitados para evitir duplicatas\n      ActualHeroes: [],\n      //\n      pickedHeroe: null,\n      points: 0,\n      sucessesses: 0,\n      errors: 0,\n      maxHeroes: 5,\n      choices: 0\n    };\n  }\n\n  Alert(props) {\n    return React.createElement(MuiAlert, Object.assign({\n      elevation: 6,\n      variant: \"filled\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n  loadingSnackBar(snack) {\n    //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n    this.setState({\n      snackBarColor: snack.color,\n      snackBarMessage: snack.message,\n      snackbarIcon: snack.icon,\n      snackBarOpen: true\n    });\n    setTimeout(function () {\n      this.setState({\n        snackBarOpen: false\n      });\n    }.bind(this), 1500);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.updateCounter, 1000);\n    setTimeout(this.verifyWinner, 60000); // this.updateInterval()\n\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n      let actualHeros = this.selectHeroes();\n    }\n  }\n\n  render() {\n    if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n      this.state.ActualHeroes = [];\n      let pickedHero = this.selectHeroes(); // Pego o heroi escolhido atraves da funcão auxiliar\n\n      this.setState({\n        pickedHeroe: pickedHero,\n        heroLoaded: true\n      });\n      let random = this.numAleatorio(3); //Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\n\n      for (var i = 0; i < 3; i++) {\n        if (i === random) {\n          this.state.ActualHeroes.push(pickedHero);\n        } else {\n          this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)]);\n        }\n      }\n    }\n\n    if (this.state.counter === 0) {\n      clearInterval(this.interval);\n    }\n\n    const styleBackground = {\n      opacity: \"0.2\",\n      position: \"absolute\",\n      width: \"100%\",\n      objectFit: 'cover',\n      height: \"100vh\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xl: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Alex Turner\")))), React.createElement(DialogStatistics, {\n      open: this.state.openStatistics,\n      won: this.state.win,\n      errors: this.state.errors / this.state.numCards * 100,\n      sucessess: this.state.sucessesses / this.state.numCards * 100,\n      points: this.state.points + this.state.counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: \"mt-0 mb-2\",\n      xl: 12,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: styleBackground,\n      src: BackgroundImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \" Pontuacao : \", this.state.points, \"\\xA0 \\xA0 \\xA0\", React.createElement(CheckIcon, {\n      style: {\n        color: green[500]\n      },\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), \" : \", this.state.sucessesses, \"\\xA0  \\xA0\", React.createElement(ErrorIcon, {\n      style: {\n        color: \"#B33A3A    \"\n      },\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), \" : \", this.state.errors), React.createElement(Grid, {\n      stlye: {\n        position: \"absolute\"\n      },\n      item: true,\n      container: true,\n      direction: \"col\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, this.state.pickedHeroe ? React.createElement(Card, {\n      hoverable: true,\n      style: {\n        width: 300,\n        position: \"absolute\",\n        marginTop: \"3%\"\n      },\n      cover: React.createElement(\"img\", {\n        onLoad: this.HandleImageLoaded,\n        alt: \"example\",\n        style: {\n          objectFit: \"cover\",\n          width: '350px',\n          borderRadius: '15px 15px 15px 15px'\n        },\n        className: \"img-fluid\",\n        src: this.state.imageLoaded ? this.state.pickedHeroe.images.sm : \"https://media.giphy.com/media/38msMCMSMUK7m/giphy.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\",\n      description: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      xl: 12,\n      container: true,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-1\",\n      onClick: this.verifyName,\n      value: heroSelected.name,\n      outline: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, heroSelected.name, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))) : React.createElement(Spinner, {\n      style: {\n        marginLeft: \"25%\",\n        marginTop: '25%',\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))) : React.createElement(Spinner, {\n      style: {\n        marginLeft: \"25%\",\n        marginTop: '25%',\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      style: {\n        position: \"absolute\"\n      },\n      container: true,\n      item: true,\n      direction: \"col\",\n      alignItens: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(SubItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(TimerIcon, {\n      fontSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), \"   \", this.state.counter, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }))))), React.createElement(Snackbar, {\n      place: \"bc\",\n      open: this.state.snackBarOpen,\n      closeNotification: () => this.setState({\n        snackBarOpen: false\n      }),\n      close: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      severity: this.state.snackBarColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.snackBarMessage)));\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","DialogStatistics","Button","Spinner","Card","Col","Row","Container","Item","SubItem","DivCard","Panel","Grid","Snackbar","green","MuiAlert","CheckIcon","ErrorIcon","TimerIcon","BackgroundImage","Meta","buttons","numCards","Snack","message","color","icon","GameScreen","constructor","props","HandleImageLoaded","setState","imageLoaded","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","points","sucessesses","errors","heroLoaded","loadingSnackBar","verifyWinner","clearInterval","interval","openStatistics","win","selectHeroes","numSorteado","heroeList","length","heroiSorteado","splice","updateCounter","counter","errorsPercentage","sucessessesPercentage","snackBarColor","snackBarMessage","snackbarIcon","snackBarOpen","VisitedHeroes","ActualHeroes","maxHeroes","choices","Alert","snack","setTimeout","bind","componentDidMount","setInterval","get","then","res","data","catch","error","alert","componentDidUpdate","prevState","actualHeros","render","pickedHero","i","push","styleBackground","opacity","position","width","objectFit","height","marginTop","borderRadius","images","sm","map","heroSelected","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\n//Components\nimport DialogStatistics from './DialogStatistics'\n\n//Reacstrap\nimport { Button, Spinner } from 'reactstrap'\n\n\n//Ant design\nimport { Card } from 'antd';\n\n\n\n//Reactstrap\nimport { Col, Row, Container } from 'reactstrap'\n//Styled Components \nimport { Item, SubItem, DivCard, Panel } from '../styles/syles'\n\n//MAterial Ui\nimport { Grid } from '@material-ui/core'\nimport { Snackbar } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\n\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\n//Material Ui Icons\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport TimerIcon from '@material-ui/icons/Timer';\n\n//Images\nimport BackgroundImage from '../images/BackgroundGameScreen.jpg'\n\n\n\n\nconst { Meta } = Card;\n\nlet buttons;\nconst numCards = 10;\n\nconst Snack = {\n    message: '',\n    color: '',\n    icon: null\n}\n\n\n\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            counter: 60,\n            win: false,\n            imageLoaded: false,\n            errorsPercentage: null,\n            sucessessesPercentage: null,\n            openStatistics: false,\n            snackBarColor: '',\n            snackBarMessage: '',\n            snackbarIcon: null,\n            snackBarOpen: false,\n            numCards: 0, //Contar quantos numeros de cards ja foram exibidos\n            heroLoaded: false, //Controlar se o heroi esta carregado ou não \n            heroeList: null, //Lista contendo todos os herois recebidos da api\n            VisitedHeroes: [], //Vetor com os herois ja visitados para evitir duplicatas\n            ActualHeroes: [], //\n            pickedHeroe: null,\n            points: 0,\n            sucessesses: 0,\n            errors: 0,\n            maxHeroes: 5,\n            choices: 0,\n\n        }\n    }\n    Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n    HandleImageLoaded = () => {\n        this.setState({ imageLoaded: true })\n    }\n    loadingSnackBar(snack) { //Função para carregar a snack bar falando se usuario errou ou acertou o héroi\n        this.setState({\n            snackBarColor: snack.color,\n            snackBarMessage: snack.message,\n            snackbarIcon: snack.icon,\n            snackBarOpen: true\n        });\n        setTimeout(\n            function () {\n                this.setState({ snackBarOpen: false });\n            }.bind(this),\n            1500\n        );\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n\n    componentDidMount() {\n        this.interval = setInterval(this.updateCounter, 1000);\n        setTimeout(this.verifyWinner, 60000)\n        // this.updateInterval()\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n\n    }\n    componentDidUpdate(prevState) {\n\n        if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n            let actualHeros = this.selectHeroes()\n        }\n    }\n\n    verifyName = (e) => {\n\n        //Se o botão foi clickado Adiciono 1 a meus cards visitado\n        this.state.numCards = this.state.numCards + 1\n        if (this.state.pickedHeroe.name === e.target.value) {\n            Snack.message = \"Você Acertou!\"\n            Snack.color = \"success\"\n            Snack.icon = CheckIcon\n            this.setState({ points: this.state.points + 20, sucessesses: this.state.sucessesses + 1 })\n        } else {\n            Snack.message = \"Você errou!\"\n            Snack.color = \"warning\"\n            Snack.icon = ErrorIcon\n            this.setState({ errors: this.state.errors + 1 })\n\n        }\n        this.setState({ heroLoaded: false, pickedHeroe: null, imageLoaded: false })\n        this.loadingSnackBar(Snack)\n        if (this.state.numCards === numCards) {\n            this.verifyWinner()\n        }\n    }\n\n    verifyWinner = () => {\n        clearInterval(this.interval)\n\n        if (this.state.sucessesses > this.state.errors) {\n            this.setState({ openStatistics: true, win: true })\n        } else {\n            this.setState({ openStatistics: true, win: false })\n\n        }\n    }\n\n    selectHeroes = () => {\n\n        let numSorteado = this.numAleatorio(this.state.heroeList.length)\n        let heroiSorteado = this.state.heroeList[numSorteado] //Ja que escolhi o sorteado deleto ele da minha lista para evitar duplicatas\n        this.state.heroeList.splice(numSorteado, 1) //Deletei o heroi do meu vetor de herois\n\n        return heroiSorteado\n    }\n\n    updateCounter = () => {\n        this.setState({ counter: this.state.counter - 1 })\n    }\n\n\n    render() {\n\n        if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n            this.state.ActualHeroes = []\n\n            let pickedHero = this.selectHeroes() // Pego o heroi escolhido atraves da funcão auxiliar\n\n            this.setState({ pickedHeroe: pickedHero, heroLoaded: true })\n\n            let random = this.numAleatorio(3) //Escolho um numero aleatorio para o heroi certo , para a posição do botao certo não ser o mesmo toda vez\n            for (var i = 0; i < 3; i++) {\n                if (i === random) {\n                    this.state.ActualHeroes.push(pickedHero)\n                } else {\n                    this.state.ActualHeroes.push(this.state.heroeList[this.numAleatorio(this.state.heroeList.length)])\n                }\n            }\n        }\n        if (this.state.counter === 0) {\n            clearInterval(this.interval)\n        }\n        const styleBackground = {\n            opacity: \"0.2\",\n            position: \"absolute\",\n            width: \"100%\",\n            objectFit: 'cover',\n            height: \"100vh\"\n        }\n        return (\n\n            <div \n               \n            >\n    \n             \n                \n                <Container\n                    fluid\n                >\n                    <Row className= \"row justify-content-center\">\n                        <Col xl = \"5\">\n                                <h2>Alex Turner</h2>\n                        </Col>\n\n                    </Row>\n                </Container>\n\n\n                <DialogStatistics\n                    open={this.state.openStatistics}\n                    won={this.state.win}\n                    errors={this.state.errors / this.state.numCards * 100}\n                    sucessess={this.state.sucessesses / this.state.numCards * 100} points={this.state.points + this.state.counter} />\n\n\n\n               \n                <Grid\n                    container\n                    fluid\n                >\n\n                    <Grid\n                        item\n                        className=\"mt-0 mb-2\"\n                        xl={12}\n                        xs={8}\n                    >\n                        <img style={styleBackground} src={BackgroundImage} />\n                        <Grid\n                            item\n                            container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\"\n                        >\n                            <Item> Pontuacao : {this.state.points}\n                                &nbsp;\t&nbsp;\t&nbsp;\n                            <CheckIcon style={{ color: green[500] }} fontSize=\"large\" /> : {this.state.sucessesses}\n                                &nbsp;\t &nbsp;\n                            <ErrorIcon style={{ color: \"#B33A3A    \" }} fontSize=\"large\" /> : {this.state.errors}\n                            </Item>\n                            <Grid\n                                stlye={{ position: \"absolute\" }}\n                                item\n                                container\n                                direction=\"col\"\n                                justify=\"center\"\n                            >\n\n                                {this.state.pickedHeroe ? <Card\n                                    hoverable\n                                    style={{ width: 300, position: \"absolute\" , marginTop :\"3%\" }}\n                                    cover={<img onLoad={this.HandleImageLoaded} alt=\"example\" style={{ objectFit : \"cover\" ,width: '350px', borderRadius: '15px 15px 15px 15px' }} className=\"img-fluid\" src={this.state.imageLoaded ? this.state.pickedHeroe.images.sm : \"https://media.giphy.com/media/38msMCMSMUK7m/giphy.gif\"} />}\n                                >\n\n                                    <Meta title=\"\" description=\"\" />\n                                    <Grid\n                                        xl={12}\n                                        container\n                                        direction=\"column\"\n                                        justify=\"center\"\n                                        alignItems=\"center\">\n                                        {this.state.ActualHeroes ? this.state.ActualHeroes.map(heroSelected => (\n                                            <Grid\n                                                fluid\n                                            >\n                                                <Button className=\"mt-1\" onClick={this.verifyName} value={heroSelected.name} outline color=\"primary\">{heroSelected.name} </Button>\n                                                <br />\n                                            </Grid>\n\n                                        )) : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />}\n                                    </Grid>\n\n                                </Card> : <Spinner style={{ marginLeft: \"25%\", marginTop: '25%', width: '3rem', height: '3rem' }} />\n\n                                }\n\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            style={{ position: \"absolute\" }}\n\n                            container\n                            item\n                            direction=\"col\"\n                            alignItens=\"center\"\n                            justify=\"center\"\n                        >\n                            <SubItem>\n                                <TimerIcon fontSize=\"large\" />   {this.state.counter}\n                                <br />\n                            </SubItem>\n\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n\n                <Snackbar\n                    place=\"bc\"\n                    open={this.state.snackBarOpen}\n                    closeNotification={() => this.setState({ snackBarOpen: false })}\n                    close\n                >\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.snackBarColor}>\n                        {this.state.snackBarMessage}\n                    </MuiAlert>\n\n                </Snackbar>\n\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}