{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\nimport { Row, Col, Button } from 'reactstrap';\nimport { Card } from 'antd';\nconst {\n  Meta\n} = Card;\nlet buttons;\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numAleatorio = range => {\n      return Math.floor(Math.random() * range); //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    };\n\n    this.verifyName = e => {\n      if (this.state.pickedHeroe.name === e.target.value) {\n        alert('parabens voce acertou');\n      } else {\n        alert('Eroooooou!');\n      }\n\n      this.setState({\n        heroLoaded: false\n      });\n    };\n\n    this.selectHeroes = () => {\n      let vetHerois = [],\n          pickedHero;\n      console.log('selecionei herois');\n      let numSorteado = this.numAleatorio(500);\n      var i = 0;\n\n      while (i < 3) {\n        if (i === 0) {\n          pickedHero = this.state.heroeList[numSorteado];\n        } //this.setState(VisitedHeroes.push(this.state.heroeList[numSorteado]) )\n\n\n        vetHerois.push(this.state.heroeList[numSorteado]);\n        numSorteado = this.numAleatorio(500);\n        i++;\n      } //this.setState({pickedHeroe : pickedHero , ActualHeroes : vetHerois})\n      //console.log('vetor de herois' + vetHerois + 'visitados ' , this.state.VisitedHeroes)\n\n\n      console.log('heroi selecionado ', vetHerois);\n      return vetHerois;\n    };\n\n    this.state = {\n      heroLoaded: false,\n      heroeList: null,\n      VisitedHeroes: [],\n      ActualHeroes: [],\n      pickedHeroe: null\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => this.setState({\n      heroeList: res.data\n    })).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList !== null) {\n      let actualHeros = this.selectHeroes();\n      buttons = this.state.ActualHeroes.map(heroSelected => React.createElement(Button, {\n        onClick: this.verifyName,\n        value: heroSelected.name,\n        outline: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, heroSelected.name, \" \"));\n    }\n  }\n\n  render() {\n    if (this.state.heroeList !== null && this.state.heroLoaded === false) {\n      let heroes = this.selectHeroes();\n      heroes.map(hero => this.state.ActualHeroes.push(hero));\n      this.state.ActualHeroes.concat(this.selectHeroes());\n\n      if (this.state.ActualHeroes !== null) {\n        console.log('herois do meu estado ', this.state.ActualHeroes);\n        this.setState({\n          pickedHeroe: this.state.ActualHeroes[this.numAleatorio(this.state.ActualHeroes.length)],\n          heroLoaded: true\n        });\n      }\n\n      console.log('pickado ', this.state.pickedHeroe);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: 12,\n      xl: {\n        size: 4,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xl: {\n        size: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.pickedHeroe ? React.createElement(Card, {\n      hoverable: true,\n      style: {\n        width: 300,\n        backgroundColor: 'whitesmoke'\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          borderRadius: '15px'\n        },\n        className: \"img-fluid\",\n        src: this.state.pickedHeroe.images.md,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Meta, {\n      title: \"\",\n      description: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), buttons) : ''), React.createElement(Col, {\n      xl: {\n        size: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","Row","Col","Button","Card","Meta","buttons","GameScreen","constructor","props","numAleatorio","range","Math","floor","random","verifyName","e","state","pickedHeroe","name","target","value","alert","setState","heroLoaded","selectHeroes","vetHerois","pickedHero","console","log","numSorteado","i","heroeList","push","VisitedHeroes","ActualHeroes","componentDidMount","get","then","res","data","catch","error","componentDidUpdate","prevState","actualHeros","map","heroSelected","render","heroes","hero","concat","length","size","offset","width","backgroundColor","borderRadius","images","md"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\nimport { Row, Col, Button } from 'reactstrap'\nimport { Card } from 'antd';\n\nconst { Meta } = Card;\n\nlet buttons;\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroLoaded : false,\n            heroeList: null,\n            VisitedHeroes: [],\n            ActualHeroes: [],\n            pickedHeroe: null\n        }\n    }\n\n    numAleatorio = (range) => {\n        return Math.floor(Math.random() * range) //Como o vetor de heroi tem tamanho 500 , pego un numero aleatorio de 0 a 499\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")\n            .then(res => (\n                (\n                    this.setState({\n                        heroeList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' + error))\n    }\n    componentDidUpdate(prevState) {\n        if(prevState.ActualHeroes !== this.state.ActualHeroes && this.state.heroeList!==null){\n            let actualHeros = this.selectHeroes()\n            buttons = this.state.ActualHeroes.map(heroSelected => (\n                <Button onClick = {this.verifyName} value = {heroSelected.name} outline color = \"primary\">{heroSelected.name} </Button>\n            ))\n        }\n    }\n\n    verifyName = (e) =>{\n        if(this.state.pickedHeroe.name === e.target.value){\n            alert('parabens voce acertou')\n        }else{\n            alert('Eroooooou!')\n        }\n        this.setState({heroLoaded : false})\n    }\n    selectHeroes = () => {\n        let vetHerois = [] , pickedHero \n        console.log('selecionei herois')\n        let numSorteado = this.numAleatorio(500)\n        var i = 0;\n        while (i < 3) {\n            if(i === 0){\n                pickedHero = this.state.heroeList[numSorteado]\n            }\n            //this.setState(VisitedHeroes.push(this.state.heroeList[numSorteado]) )\n            vetHerois.push(this.state.heroeList[numSorteado ])\n            numSorteado = this.numAleatorio(500)\n            i++\n        }\n        //this.setState({pickedHeroe : pickedHero , ActualHeroes : vetHerois})\n        //console.log('vetor de herois' + vetHerois + 'visitados ' , this.state.VisitedHeroes)\n        console.log('heroi selecionado ' , vetHerois)\n    \n       return vetHerois\n    }\n\n    render() {\n        \n        if(this.state.heroeList!==null && this.state.heroLoaded === false){\n          \n            let heroes = this.selectHeroes()\n            heroes.map(hero => (\n                this.state.ActualHeroes.push(hero)\n            ))\n            this.state.ActualHeroes.concat(this.selectHeroes())\n\n\n            if(this.state.ActualHeroes !== null){\n                console.log('herois do meu estado ' , this.state.ActualHeroes)\n                this.setState({pickedHeroe : this.state.ActualHeroes[this.numAleatorio(this.state.ActualHeroes.length)] , heroLoaded : true})\n            }\n            console.log('pickado ' , this.state.pickedHeroe)\n        }\n        return (\n            <div>\n                <Row>\n                    {/*Coluna das pontuações , acertos e erros*/}\n                    <Col xs={12} sm={12} xl={{ size: 4, offset: 1 }}>\n                    \n                    </Col>\n                    {/*Coluna das cards */}\n                    <Col xl={{ size: 5 }}>\n                        {this.state.pickedHeroe ? <Card\n                            hoverable\n                            style={{ width: 300, backgroundColor: 'whitesmoke' }}\n                            cover={<img alt=\"example\" style={{ borderRadius: '15px' }} className=\"img-fluid\" src={this.state.pickedHeroe.images.md} />}\n                        >\n                            <Meta title=\"\" description=\"\" />\n                            {/*   {this.state.ActualHeroes?  this.state.ActualHeroes.map(heroSelected => (\n                                <Button onClick = {this.verifyName} value = {heroSelected.name} outline color = \"primary\">{heroSelected.name} </Button>\n                            )) : null} */}\n                            {buttons}\n                            \n                        </Card> : ''}\n                    </Col>\n                    {/* Coluna de cards/tempo Restante}*/}\n                    <Col xl={{ size: 4 }}>\n\n                    </Col>\n\n                </Row>\n                {/*    {this.state.heroeList ? <Card\n                    hoverable\n                    style={{ width: 240 }}\n                    cover={<img alt=\"example\" className=\"img-fluid\" src= {this.state.heroeList[this.numAleatorio()].images.md } />}\n                >\n                    <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n                </Card> : ''} */}\n\n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}