{"ast":null,"code":"var _jsxFileName = \"/home/matheus/\\xC1rea de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport axios from 'axios';\nlet heroesList;\n\nclass GameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.heroesList = this.state.heroList !== null ? this.state.heroList.map(hero => React.createElement(\"ul\", {\n      key: hero.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, hero.name), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, hero.slug), React.createElement(\"img\", {\n      src: hero.images.xs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))) : null;\n    this.state = {\n      heroList: null\n    };\n  }\n\n  componentDidMount() {\n    api.get(\"/all.json\").then(res => (console.log('obtive como resposta ', res), this.setState({\n      heroList: res.data\n    }))).catch(error => alert('erro de comunicação com o servidor ' + error));\n  }\n\n  componentDidUpdate() {\n    console.log('lista de herois ', this.state.heroList);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default GameScreen;","map":{"version":3,"sources":["/home/matheus/Área de Trabalho/Projetos/appMasters/processo-seletivo-app-masters/HeroApp/src/components/GameScreen.jsx"],"names":["React","Component","api","axios","heroesList","GameScreen","constructor","props","state","heroList","map","hero","id","name","slug","images","xs","componentDidMount","get","then","res","console","log","setState","data","catch","error","alert","componentDidUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAIC,UAAJ;;AACA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAuBnBH,UAvBmB,GAuBL,KAAKI,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GAA+B,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,IAAI,IACtE;AAAI,MAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,IAAV,CAFJ,EAGI;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACI,MAAL,CAAYC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADyC,CAA/B,GAMT,IA7Bc;AAGf,SAAKR,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,WAAR,EACKC,IADL,CACUC,GAAG,KAEDC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC,GACA,KAAKG,QAAL,CAAc;AACVd,MAAAA,QAAQ,EAAEW,GAAG,CAACI;AADJ,KAAd,CAHC,CADb,EAQMC,KARN,CAQYC,KAAK,IAAIC,KAAK,CAAC,wCAAyCD,KAA1C,CAR1B;AASH;;AACDE,EAAAA,kBAAkB,GAAE;AAChBP,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAiC,KAAKd,KAAL,CAAWC,QAA5C;AACH;;AASDoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AArC8B;;AAwCnC,eAAexB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../services/api'\nimport axios from 'axios'\n\n\nlet heroesList\nclass GameScreen extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            heroList: null\n        }\n    }\n\n    componentDidMount() {\n        api.get(\"/all.json\")    \n            .then(res => (\n                (\n                    console.log('obtive como resposta ', res),\n                    this.setState({\n                        heroList: res.data\n                    })\n                ))\n            ).catch(error => alert('erro de comunicação com o servidor ' +  error))\n    }\n    componentDidUpdate(){\n        console.log('lista de herois ' , this.state.heroList)\n    }\n\n    heroesList =  this.state.heroList !== null ? this.state.heroList.map( hero => (\n        <ul key ={hero.id}>\n            <li>{hero.name}</li>\n            <li>{hero.slug}</li>\n            <img src={hero.images.xs}></img>\n        </ul>\n    )) : null\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}